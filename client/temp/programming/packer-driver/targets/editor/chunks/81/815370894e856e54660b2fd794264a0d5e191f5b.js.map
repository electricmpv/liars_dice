{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/core/scene-initializer.ts"],"names":["_decorator","Component","director","find","AppInitializer","ccclass","property","SceneInitializer","start","console","log","getScene","name","ensureAppInitializer","canvas","error","appInitializer","getComponent","addComponent"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAgBC,MAAAA,I,OAAAA,I;;AACvCC,MAAAA,c,iBAAAA,c;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;AAE9B;AACA;AACA;AACA;AACA;;kCAEaO,gB,WADZF,OAAO,CAAC,kBAAD,C,gBAAR,MACaE,gBADb,SACsCN,SADtC,CACgD;AAE5CO,QAAAA,KAAK,GAAG;AAAA;;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAa,6BAAD,sBAA6BR,QAAQ,CAACS,QAAT,EAA7B,qBAA6B,mBAAqBC,IAAK,EAAnE,EADI,CAGJ;;AACA,cAAI,wBAAAV,QAAQ,CAACS,QAAT,2CAAqBC,IAArB,MAA8B,YAAlC,EAAgD;AAC5C,iBAAKC,oBAAL;AACH;AACJ;AAED;AACJ;AACA;;;AACYA,QAAAA,oBAAoB,GAAG;AAC3B;AACA,gBAAMC,MAAM,GAAGX,IAAI,CAAC,QAAD,CAAnB;;AACA,cAAI,CAACW,MAAL,EAAa;AACTL,YAAAA,OAAO,CAACM,KAAR,CAAc,gCAAd;AACA;AACH,WAN0B,CAQ3B;;;AACA,cAAIC,cAAc,GAAGF,MAAM,CAACG,YAAP;AAAA;AAAA,+CAArB;;AACA,cAAI,CAACD,cAAL,EAAqB;AACjBP,YAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACAM,YAAAA,cAAc,GAAGF,MAAM,CAACI,YAAP;AAAA;AAAA,iDAAjB;AACH,WAHD,MAGO;AACHT,YAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACH;AACJ;;AA9B2C,O","sourcesContent":["import { _decorator, Component, director, Node, find } from 'cc';\nimport { AppInitializer } from './app-initializer';\n\nconst { ccclass, property } = _decorator;\n\n/**\n * 场景初始化器\n * 负责在场景加载时执行必要的初始化操作\n * 此组件应添加到每个场景的Canvas节点上\n */\n@ccclass('SceneInitializer')\nexport class SceneInitializer extends Component {\n    \n    start() {\n        console.log(`[SceneInitializer] 初始化场景: ${director.getScene()?.name}`);\n        \n        // 如果是LoginScene，确保AppInitializer已添加\n        if (director.getScene()?.name === 'LoginScene') {\n            this.ensureAppInitializer();\n        }\n    }\n    \n    /**\n     * 确保AppInitializer已添加到Canvas节点\n     */\n    private ensureAppInitializer() {\n        // 获取Canvas节点\n        const canvas = find('Canvas');\n        if (!canvas) {\n            console.error('[SceneInitializer] 找不到Canvas节点');\n            return;\n        }\n        \n        // 检查是否已有AppInitializer组件\n        let appInitializer = canvas.getComponent(AppInitializer);\n        if (!appInitializer) {\n            console.log('[SceneInitializer] 添加AppInitializer组件到Canvas节点');\n            appInitializer = canvas.addComponent(AppInitializer);\n        } else {\n            console.log('[SceneInitializer] Canvas节点已有AppInitializer组件');\n        }\n    }\n}\n"]}