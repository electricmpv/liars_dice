{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/prefabs/room-item.ts"],"names":["_decorator","Component","Node","Label","Sprite","Button","Color","tween","Vec3","UIOpacity","ccclass","property","RoomItem","_roomId","_roomName","_playerCount","_maxPlayers","_status","_hasPassword","_isPrivate","_hasFriends","_originalScale","WAITING_COLOR","PLAYING_COLOR","FULL_COLOR","onLoad","node","scale","clone","updateRoomDisplay","start","on","EventType","TOUCH_END","onRoomItemClicked","joinButton","onJoinButtonClicked","onDestroy","isValid","off","setRoomInfo","info","roomId","roomName","playerCount","maxPlayers","status","hasPassword","isPrivate","hasFriends","setRoomId","id","roomIdLabel","string","setRoomName","name","roomNameLabel","setPlayerCount","current","max","playerCountLabel","updateStatusDisplay","setStatus","setHasPassword","lockedIcon","active","setIsPrivate","privateIcon","setHasFriends","friendsIcon","statusLabel","color","playingIcon","interactable","playClickFeedback","emit","console","log","to","x","y","playNewItemAnimation","originalPos","position","uiOpacity","getComponent","addComponent","z","opacity","playHighlightAnimation","originalColor","backgroundSprite","highlightColor","union","repeat","playRemoveAnimation","callback","call"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, Sprite, Button, Color, tween, Vec3, UIOpacity } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 房间列表项预制体\n * 功能：\n * 1. 显示房间信息（ID、名称、玩家数、状态）\n * 2. 支持点击加入房间\n * 3. 根据房间状态显示不同样式\n */\n\nimport type { RoomStatus as SharedRoomStatus } from \"../../../../shared/protocols/room-protocol\";\n\n@ccclass('RoomItem')\nexport class RoomItem extends Component {\n    @property(Label)\n    private roomIdLabel: Label = null!;\n\n    @property(Label)\n    private roomNameLabel: Label = null!;\n\n    @property(Label)\n    private playerCountLabel: Label = null!;\n\n    @property(Label)\n    private statusLabel: Label = null!;\n\n    @property(Sprite)\n    private backgroundSprite: Sprite = null!;\n\n    @property(Button)\n    private joinButton: Button = null!;\n\n    @property(Node)\n    private lockedIcon: Node = null!;\n\n    @property(Node)\n    private privateIcon: Node = null!;\n\n    @property(Node)\n    private playingIcon: Node = null!;\n\n    @property(Node)\n    private friendsIcon: Node = null!;\n\n    // 房间信息\n    private _roomId: string = '';\n    private _roomName: string = '';\n    private _playerCount: number = 0;\n    private _maxPlayers: number = 6;\n    private _status: SharedRoomStatus = \"waiting\";\n    private _hasPassword: boolean = false;\n    private _isPrivate: boolean = false;\n    private _hasFriends: boolean = false;\n    private _originalScale: Vec3 = new Vec3(1, 1, 1);\n\n    // 颜色常量\n    private readonly WAITING_COLOR: Color = new Color(76, 217, 100, 255);\n    private readonly PLAYING_COLOR: Color = new Color(255, 59, 48, 255);\n    private readonly FULL_COLOR: Color = new Color(142, 142, 147, 255);\n\n    onLoad(): void {\n        this._originalScale = this.node.scale.clone();\n        this.updateRoomDisplay();\n    }\n\n    start(): void {\n        // 注册点击事件\n        this.node.on(Node.EventType.TOUCH_END, this.onRoomItemClicked, this);\n        \n        if (this.joinButton) {\n            this.joinButton.node.on('click', this.onJoinButtonClicked, this);\n        }\n    }\n\n    onDestroy(): void {\n        // 在移除监听器前检查节点是否有效，避免在销毁阶段访问无效节点\n        if (this.node && this.node.isValid) {\n            this.node.off(Node.EventType.TOUCH_END, this.onRoomItemClicked, this);\n        }\n        \n        if (this.joinButton && this.joinButton.isValid && this.joinButton.node && this.joinButton.node.isValid) {\n            this.joinButton.node.off('click', this.onJoinButtonClicked, this);\n        }\n    }\n\n    /**\n     * 设置房间信息\n     */\n    public setRoomInfo(info: {\n        roomId: string;\n        roomName: string;\n        playerCount: number;\n        maxPlayers: number;\n        status: SharedRoomStatus;\n        hasPassword: boolean;\n        isPrivate: boolean;\n        hasFriends: boolean;\n    }): void {\n        this._roomId = info.roomId;\n        this._roomName = info.roomName;\n        this._playerCount = info.playerCount;\n        this._maxPlayers = info.maxPlayers;\n        this._status = info.status;\n        this._hasPassword = info.hasPassword;\n        this._isPrivate = info.isPrivate;\n        this._hasFriends = info.hasFriends;\n        \n        this.updateRoomDisplay();\n    }\n\n    /**\n     * 设置房间ID\n     */\n    public setRoomId(id: string): void {\n        this._roomId = id;\n        if (this.roomIdLabel) {\n            this.roomIdLabel.string = `#${id}`;\n        }\n    }\n\n    /**\n     * 设置房间名称\n     */\n    public setRoomName(name: string): void {\n        this._roomName = name;\n        if (this.roomNameLabel) {\n            this.roomNameLabel.string = name;\n        }\n    }\n\n    /**\n     * 设置房间玩家数量\n     */\n    public setPlayerCount(current: number, max: number): void {\n        this._playerCount = current;\n        this._maxPlayers = max;\n        \n        if (this.playerCountLabel) {\n            this.playerCountLabel.string = `${current}/${max}`;\n        }\n        \n        // 如果房间满了，更新状态\n        if (current >= max && this._status !== \"gaming\") {\n            this._status = \"closed\";\n            this.updateStatusDisplay();\n        } else if (current < max && this._status === \"closed\") {\n            this._status = \"waiting\";\n            this.updateStatusDisplay();\n        }\n    }\n\n    /**\n     * 设置房间状态\n     */\n    public setStatus(status: SharedRoomStatus): void {\n        this._status = status;\n        this.updateStatusDisplay();\n    }\n\n    /**\n     * 设置房间是否有密码\n     */\n    public setHasPassword(hasPassword: boolean): void {\n        this._hasPassword = hasPassword;\n        if (this.lockedIcon) {\n            this.lockedIcon.active = hasPassword;\n        }\n    }\n\n    /**\n     * 设置房间是否为私人房间\n     */\n    public setIsPrivate(isPrivate: boolean): void {\n        this._isPrivate = isPrivate;\n        if (this.privateIcon) {\n            this.privateIcon.active = isPrivate;\n        }\n    }\n\n    /**\n     * 设置房间是否有好友\n     */\n    public setHasFriends(hasFriends: boolean): void {\n        this._hasFriends = hasFriends;\n        if (this.friendsIcon) {\n            this.friendsIcon.active = hasFriends;\n        }\n    }\n\n    /**\n     * 更新房间显示\n     */\n    private updateRoomDisplay(): void {\n        if (this.roomIdLabel) {\n            this.roomIdLabel.string = `#${this._roomId}`;\n        }\n        \n        if (this.roomNameLabel) {\n            this.roomNameLabel.string = this._roomName;\n        }\n        \n        if (this.playerCountLabel) {\n            this.playerCountLabel.string = `${this._playerCount}/${this._maxPlayers}`;\n        }\n        \n        this.updateStatusDisplay();\n        \n        if (this.lockedIcon) {\n            this.lockedIcon.active = this._hasPassword;\n        }\n        \n        if (this.privateIcon) {\n            this.privateIcon.active = this._isPrivate;\n        }\n        \n        if (this.friendsIcon) {\n            this.friendsIcon.active = this._hasFriends;\n        }\n    }\n\n    /**\n     * 更新状态显示\n     */\n    private updateStatusDisplay(): void {\n        // 更新状态文本\n        if (this.statusLabel) {\n            switch (this._status) {\n                case \"waiting\":\n                    this.statusLabel.string = '等待中';\n                    this.statusLabel.color = this.WAITING_COLOR;\n                    break;\n                    \n                case \"gaming\":\n                    this.statusLabel.string = '游戏中';\n                    this.statusLabel.color = this.PLAYING_COLOR;\n                    break;\n                    \n                case \"closed\":\n                    this.statusLabel.string = '已满';\n                    this.statusLabel.color = this.FULL_COLOR;\n                    break;\n            }\n        }\n        \n        // 更新游戏中图标\n        if (this.playingIcon) {\n            this.playingIcon.active = this._status === \"gaming\";\n        }\n        \n        // 更新加入按钮状态\n        if (this.joinButton) {\n            this.joinButton.interactable = this._status !== \"closed\";\n        }\n    }\n\n    /**\n     * 房间列表项被点击事件处理\n     */\n    private onRoomItemClicked(): void {\n        // 播放点击反馈动画\n        this.playClickFeedback();\n        \n        // 发出房间被点击的事件\n        this.node.emit('room-item-clicked', {\n            roomId: this._roomId,\n            roomName: this._roomName,\n            hasPassword: this._hasPassword\n        });\n    }\n\n    /**\n     * 加入按钮被点击事件处理\n     */\n    private onJoinButtonClicked(): void {\n        console.log(`[RoomItem] Join button clicked for room: ${this._roomId}`); // 添加日志\n        // 播放点击反馈动画\n        this.playClickFeedback();\n\n        // 发出加入房间的事件\n        console.log(`[RoomItem] Emitting join-room event for room: ${this._roomId}`); // 添加日志\n        this.node.emit('join-room', {\n            roomId: this._roomId,\n            roomName: this._roomName,\n            hasPassword: this._hasPassword\n        });\n    }\n\n    /**\n     * 播放点击反馈动画\n     */\n    private playClickFeedback(): void {\n        tween(this.node)\n            .to(0.1, { scale: new Vec3(this._originalScale.x * 0.95, this._originalScale.y * 0.95, 1) })\n            .to(0.1, { scale: this._originalScale })\n            .start();\n    }\n\n    /**\n     * 播放新房间动画\n     */\n    public playNewItemAnimation(): void {\n        const originalPos = this.node.position.clone();\n        const uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\n        \n        // 设置初始位置和透明度\n        this.node.position = new Vec3(originalPos.x - 50, originalPos.y, originalPos.z);\n        uiOpacity.opacity = 0;\n        \n        // 播放动画\n        tween(this.node)\n            .to(0.3, { position: originalPos })\n            .start();\n            \n        tween(uiOpacity)\n            .to(0.3, { opacity: 255 })\n            .start();\n    }\n\n    /**\n     * 播放高亮动画\n     */\n    public playHighlightAnimation(): void {\n        // 记录原始颜色\n        const originalColor = this.backgroundSprite?.color?.clone();\n        if (!originalColor || !this.backgroundSprite) return;\n        \n        // 高亮色\n        const highlightColor = new Color(255, 238, 196, 255);\n        \n        // 播放颜色变换动画\n        tween(this.backgroundSprite)\n            .to(0.3, { color: highlightColor })\n            .to(0.3, { color: originalColor })\n            .union()\n            .repeat(2)\n            .start();\n    }\n\n    /**\n     * 播放删除动画\n     */\n    public playRemoveAnimation(callback?: Function): void {\n        const uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\n        \n        tween(this.node)\n            .to(0.3, { scale: new Vec3(0, this._originalScale.y, 1) })\n            .start();\n            \n        tween(uiOpacity)\n            .to(0.3, { opacity: 0 })\n            .call(() => {\n                if (callback) callback();\n            })\n            .start();\n    }\n}\n"]}