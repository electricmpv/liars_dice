{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/prefabs/player-item.ts"],"names":["_decorator","Component","Node","Label","Sprite","SpriteFrame","Color","tween","Vec3","UIOpacity","ccclass","property","PlayerItem","_playerId","_playerName","_isReady","_isOnline","_isAI","_aiType","_originalScale","ACTIVE_COLOR","INACTIVE_COLOR","OFFLINE_COLOR","onLoad","node","scale","clone","updateIndicators","start","on","EventType","TOUCH_END","onPlayerItemClicked","onDestroy","off","setPlayerId","id","getPlayerId","setPlayerName","name","nameLabel","string","getPlayerName","setAvatar","spriteFrame","avatar","setIsAI","isAI","aiType","aiAvatars","length","avatarIndex","defaultAvatar","aiIcon","active","updateStatusLabel","setIsReady","isReady","playReadyAnimation","setIsOnline","isOnline","playOfflineAnimation","playOnlineAnimation","statusLabel","color","readyIndicator","offlineIndicator","playClickFeedback","emit","playerId","playerName","to","x","y","uiOpacity","getComponent","addComponent","opacity","call"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAA0BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAWC,MAAAA,S,OAAAA,S;;;;;;;;;OAClG;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;4BAEaY,U,WADZF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAACP,MAAD,C,UAGRO,QAAQ,CAACR,KAAD,C,UAGRQ,QAAQ,CAACR,KAAD,C,UAKRQ,QAAQ,CAACT,IAAD,C,UAKRS,QAAQ,CAACT,IAAD,C,UAMRS,QAAQ,CAACN,WAAD,C,UAGRM,QAAQ,CAAC,CAACN,WAAD,CAAD,C,UAGRM,QAAQ,CAACT,IAAD,C,2BA9Bb,MACaU,UADb,SACgCX,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUtC;AAVsC;;AAetC;AAfsC;;AAoBtC;AACA;AArBsC;;AAAA;;AAAA;;AA8BF;AA9BE,eAgC9BY,SAhC8B,GAgCV,EAhCU;AAAA,eAiC9BC,WAjC8B,GAiCR,EAjCQ;AAkCtC;AACA;AAnCsC,eAoC9BC,QApC8B,GAoCV,KApCU;AAAA,eAqC9BC,SArC8B,GAqCT,IArCS;AAAA,eAsC9BC,KAtC8B,GAsCb,KAtCa;AAAA,eAuC9BC,OAvC8B,GAuCZ,CAAC,CAvCW;AAwCtC;AAxCsC,eAyC9BC,cAzC8B,GAyCP,IAAIX,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAzCO;AA2CtC;AA3CsC,eA4CrBY,YA5CqB,GA4CC,IAAId,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,CAApB,EAAuB,GAAvB,CA5CD;AAAA,eA6CrBe,cA7CqB,GA6CG,IAAIf,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,CA7CH;AAAA,eA8CrBgB,aA9CqB,GA8CE,IAAIhB,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,CA9CF;AAAA;;AAgDtCiB,QAAAA,MAAM,GAAG;AACL,eAAKJ,cAAL,GAAsB,KAAKK,IAAL,CAAUC,KAAV,CAAgBC,KAAhB,EAAtB;AACA,eAAKC,gBAAL;AACH;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKJ,IAAL,CAAUK,EAAV,CAAa3B,IAAI,CAAC4B,SAAL,CAAeC,SAA5B,EAAuC,KAAKC,mBAA5C,EAAiE,IAAjE;AACH;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAKT,IAAL,CAAUU,GAAV,CAAchC,IAAI,CAAC4B,SAAL,CAAeC,SAA7B,EAAwC,KAAKC,mBAA7C,EAAkE,IAAlE;AACH;AAED;AACJ;AACA;;;AACWG,QAAAA,WAAW,CAACC,EAAD,EAAmB;AACjC,eAAKvB,SAAL,GAAiBuB,EAAjB;AACH;AAED;AACJ;AACA;;;AACWC,QAAAA,WAAW,GAAW;AACzB,iBAAO,KAAKxB,SAAZ;AACH;AAED;AACJ;AACA;;;AACWyB,QAAAA,aAAa,CAACC,IAAD,EAAqB;AACrC,eAAKzB,WAAL,GAAmByB,IAAnB;;AACA,cAAI,KAAKC,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeC,MAAf,GAAwBF,IAAxB;AACH;AACJ;AAED;AACJ;AACA;;;AACWG,QAAAA,aAAa,GAAW;AAC3B,iBAAO,KAAK5B,WAAZ;AACH;AAED;AACJ;AACA;;;AACW6B,QAAAA,SAAS,CAACC,WAAD,EAAiC;AAC7C,cAAI,KAAKC,MAAL,IAAeD,WAAnB,EAAgC;AAC5B,iBAAKC,MAAL,CAAYD,WAAZ,GAA0BA,WAA1B;AACH;AACJ;AAED;AACJ;AACA;;;AACWE,QAAAA,OAAO,CAACC,IAAD,EAAgBC,MAAc,GAAG,CAAjC,EAA0C;AACpD,eAAK/B,KAAL,GAAa8B,IAAb;AACA,eAAK7B,OAAL,GAAe8B,MAAf,CAFoD,CAIpD;;AACA,cAAID,IAAI,IAAI,KAAKE,SAAb,IAA0B,KAAKA,SAAL,CAAeC,MAAf,GAAwB,CAAtD,EAAyD;AACrD,kBAAMC,WAAW,GAAGH,MAAM,GAAG,KAAKC,SAAL,CAAeC,MAA5C;AACA,iBAAKP,SAAL,CAAe,KAAKM,SAAL,CAAeE,WAAf,CAAf;AACH,WAHD,MAGO,IAAI,KAAKC,aAAT,EAAwB;AAC3B;AACA,iBAAKT,SAAL,CAAe,KAAKS,aAApB;AACH,WAXmD,CAapD;;;AACA,cAAI,KAAKC,MAAT,EAAiB;AACb,iBAAKA,MAAL,CAAYC,MAAZ,GAAqBP,IAArB;AACH;;AAED,eAAKQ,iBAAL;AACH,SA3HqC,CA6HtC;AAEA;;AAEA;AACJ;AACA;;;AACWC,QAAAA,UAAU,CAACC,OAAD,EAAyB;AACtC;AACA,cAAI,KAAK1C,QAAL,KAAkB0C,OAAtB,EAA+B;AAC3B,gBAAIA,OAAJ,EAAa;AACT,mBAAKC,kBAAL;AACH;AACJ;;AAED,eAAK3C,QAAL,GAAgB0C,OAAhB;AACA,eAAK9B,gBAAL;AACA,eAAK4B,iBAAL;AACH;AAED;AACJ;AACA;;;AACWI,QAAAA,WAAW,CAACC,QAAD,EAA0B;AACxC;AACA,cAAI,KAAK5C,SAAL,IAAkB,CAAC4C,QAAvB,EAAiC;AAC7B,iBAAKC,oBAAL;AACH,WAFD,MAEO,IAAI,CAAC,KAAK7C,SAAN,IAAmB4C,QAAvB,EAAiC;AACpC;AACA,iBAAKE,mBAAL;AACH;;AAED,eAAK9C,SAAL,GAAiB4C,QAAjB;AACA,eAAKjC,gBAAL;AACA,eAAK4B,iBAAL;AACH,SAhKqC,CAkKtC;;AAEA;AACJ;AACA;;;AACYA,QAAAA,iBAAiB,GAAS;AAC9B,cAAI,CAAC,KAAKQ,WAAV,EAAuB;;AAEvB,cAAI,CAAC,KAAK/C,SAAV,EAAqB;AACjB,iBAAK+C,WAAL,CAAiBtB,MAAjB,GAA0B,IAA1B;AACA,iBAAKsB,WAAL,CAAiBC,KAAjB,GAAyB,KAAK1C,aAA9B;AACH,WAHD,MAGO,IAAI,KAAKL,KAAT,EAAgB;AACnB,iBAAK8C,WAAL,CAAiBtB,MAAjB,GAA0B,MAA1B;AACA,iBAAKsB,WAAL,CAAiBC,KAAjB,GAAyB,IAAI1D,KAAJ,CAAU,EAAV,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAAzB;AACH,WAHM,MAGA,IAAI,KAAKS,QAAT,EAAmB;AACtB,iBAAKgD,WAAL,CAAiBtB,MAAjB,GAA0B,KAA1B;AACA,iBAAKsB,WAAL,CAAiBC,KAAjB,GAAyB,IAAI1D,KAAJ,CAAU,EAAV,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAAzB;AACH,WAHM,MAGA;AACH,iBAAKyD,WAAL,CAAiBtB,MAAjB,GAA0B,KAA1B;AACA,iBAAKsB,WAAL,CAAiBC,KAAjB,GAAyB,IAAI1D,KAAJ,CAAU,GAAV,EAAe,EAAf,EAAmB,EAAnB,EAAuB,GAAvB,CAAzB;AACH;AACJ;AAED;AACJ;AACA;;;AACYqB,QAAAA,gBAAgB,GAAS;AAC7B;AACA;AACA;AACA;AAEA;AACA,cAAI,KAAKsC,cAAT,EAAyB;AACrB,iBAAKA,cAAL,CAAoBX,MAApB,GAA6B,KAAKvC,QAAL,IAAiB,KAAKC,SAAnD;AACH,WAT4B,CAW7B;AACA;AACA;AACA;AAEA;;;AACA,cAAI,KAAKkD,gBAAT,EAA2B;AACvB,iBAAKA,gBAAL,CAAsBZ,MAAtB,GAA+B,CAAC,KAAKtC,SAArC;AACH,WAnB4B,CAqB7B;;;AACA,cAAI,KAAK6B,MAAT,EAAiB;AACb,gBAAI,CAAC,KAAK7B,SAAV,EAAqB;AACjB,mBAAK6B,MAAL,CAAYmB,KAAZ,GAAoB,KAAK1C,aAAzB,CADiB,CAErB;AACA;AACA;AACC,aALD,MAKO;AACH,mBAAKuB,MAAL,CAAYmB,KAAZ,GAAoB,KAAK3C,cAAzB;AACH;AACJ;AACJ;AAED;AACJ;AACA;;;AACYW,QAAAA,mBAAmB,GAAS;AAChC;AACA,eAAKmC,iBAAL,GAFgC,CAIhC;;AACA,eAAK3C,IAAL,CAAU4C,IAAV,CAAe,gBAAf,EAAiC;AAC7BC,YAAAA,QAAQ,EAAE,KAAKxD,SADc;AAE7ByD,YAAAA,UAAU,EAAE,KAAKxD,WAFY;AAG7BiC,YAAAA,IAAI,EAAE,KAAK9B,KAHkB,CAI7B;;AAJ6B,WAAjC;AAMH;AAED;AACJ;AACA;;;AACYkD,QAAAA,iBAAiB,GAAS;AAC9B5D,UAAAA,KAAK,CAAC,KAAKiB,IAAN,CAAL,CACK+C,EADL,CACQ,GADR,EACa;AAAE9C,YAAAA,KAAK,EAAE,IAAIjB,IAAJ,CAAS,KAAKW,cAAL,CAAoBqD,CAApB,GAAwB,IAAjC,EAAuC,KAAKrD,cAAL,CAAoBsD,CAApB,GAAwB,IAA/D,EAAqE,CAArE;AAAT,WADb,EAEKF,EAFL,CAEQ,GAFR,EAEa;AAAE9C,YAAAA,KAAK,EAAE,KAAKN;AAAd,WAFb,EAGKS,KAHL;AAIH;AAED;AACJ;AACA;AACI;;AAEA;AACJ;AACA;;;AACY8B,QAAAA,kBAAkB,GAAS;AAC/B,cAAI,CAAC,KAAK1C,SAAV,EAAqB,OADU,CAG/B;;AACA,cAAI,KAAKiD,cAAT,EAAyB;AACrB,iBAAKA,cAAL,CAAoBX,MAApB,GAA6B,IAA7B;AACA,iBAAKW,cAAL,CAAoBxC,KAApB,GAA4B,IAAIjB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAA5B,CAFqB,CAIrB;;AACAD,YAAAA,KAAK,CAAC,KAAK0D,cAAN,CAAL,CACKM,EADL,CACQ,GADR,EACa;AACL9C,cAAAA,KAAK,EAAE,IAAIjB,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,CAAnB;AADF,aADb,EAIK+D,EAJL,CAIQ,GAJR,EAIa;AACL9C,cAAAA,KAAK,EAAE,IAAIjB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AADF,aAJb,EAOKoB,KAPL;AAQH;AACJ;AAED;AACJ;AACA;;;AACYiC,QAAAA,oBAAoB,GAAS;AACjC;AACA,cAAI,KAAKhB,MAAT,EAAiB;AACbtC,YAAAA,KAAK,CAAC,KAAKsC,MAAN,CAAL,CACK0B,EADL,CACQ,GADR,EACa;AACLP,cAAAA,KAAK,EAAE,KAAK1C;AADP,aADb,EAIKM,KAJL;AAKH,WARgC,CAUjC;;;AACA,cAAI,KAAKsC,gBAAT,EAA2B;AACvB,iBAAKA,gBAAL,CAAsBZ,MAAtB,GAA+B,IAA/B;AACA,kBAAMoB,SAAS,GAAG,KAAKR,gBAAL,CAAsBS,YAAtB,CAAmClE,SAAnC,KAAiD,KAAKyD,gBAAL,CAAsBU,YAAtB,CAAmCnE,SAAnC,CAAnE;AACAiE,YAAAA,SAAS,CAACG,OAAV,GAAoB,CAApB;AAEAtE,YAAAA,KAAK,CAACmE,SAAD,CAAL,CACKH,EADL,CACQ,GADR,EACa;AACLM,cAAAA,OAAO,EAAE;AADJ,aADb,EAIKjD,KAJL;AAKH;AACJ;AAED;AACJ;AACA;;;AACYkC,QAAAA,mBAAmB,GAAS;AAChC;AACA,cAAI,KAAKjB,MAAT,EAAiB;AACbtC,YAAAA,KAAK,CAAC,KAAKsC,MAAN,CAAL,CACK0B,EADL,CACQ,GADR,EACa;AACL;AACAP,cAAAA,KAAK,EAAE,KAAK3C;AAFP,aADb,EAKKO,KALL;AAMH,WAT+B,CAWhC;;;AACA,cAAI,KAAKsC,gBAAT,EAA2B;AACvB,kBAAMQ,SAAS,GAAG,KAAKR,gBAAL,CAAsBS,YAAtB,CAAmClE,SAAnC,KAAiD,KAAKyD,gBAAL,CAAsBU,YAAtB,CAAmCnE,SAAnC,CAAnE;AAEAF,YAAAA,KAAK,CAACmE,SAAD,CAAL,CACKH,EADL,CACQ,GADR,EACa;AACLM,cAAAA,OAAO,EAAE;AADJ,aADb,EAIKC,IAJL,CAIU,MAAM;AACR,mBAAKZ,gBAAL,CAAsBZ,MAAtB,GAA+B,KAA/B;AACH,aANL,EAOK1B,KAPL;AAQH;AACJ;AAED;AACJ;AACA;AACI;;;AA/UsC,O;;;;;iBAEb,I;;;;;;;iBAGE,I;;;;;;;iBAGE,I;;;;;;;iBAKE,I;;;;;;;iBAKE,I;;;;;;;iBAMI,I;;;;;;;iBAGF,E;;;;;;;iBAGL,I","sourcesContent":["import { _decorator, Component, Node, Label, Sprite, SpriteFrame, UITransform, Color, tween, Vec3, sys, UIOpacity } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 玩家列表项预制体\n * 功能：\n * 1. 显示玩家头像、名称、状态\n * 2. 当前玩家/轮到玩家高亮显示\n * 3. 支持玩家状态变化动画\n */\n@ccclass('PlayerItem')\nexport class PlayerItem extends Component {\n    @property(Sprite)\n    private avatar: Sprite = null!;\n\n    @property(Label)\n    private nameLabel: Label = null!;\n\n    @property(Label)\n    private statusLabel: Label = null!;\n\n    // Removed currentPlayerIndicator property\n\n    @property(Node)\n    private readyIndicator: Node = null!;\n\n    // Removed activeIndicator property\n\n    @property(Node)\n    private offlineIndicator: Node = null!;\n\n    // Removed diceContainer property\n    // Removed diceCountLabel property\n\n    @property(SpriteFrame)\n    private defaultAvatar: SpriteFrame = null!;\n\n    @property([SpriteFrame])\n    private aiAvatars: SpriteFrame[] = [];\n\n    @property(Node)\n    private aiIcon: Node | null = null; // 新增：用于显示 AI 图标的节点\n\n    private _playerId: string = '';\n    private _playerName: string = '';\n    // Removed _isCurrentPlayer state\n    // Removed _isActivePlayer state\n    private _isReady: boolean = false;\n    private _isOnline: boolean = true;\n    private _isAI: boolean = false;\n    private _aiType: number = -1;\n    // Removed _diceCount state\n    private _originalScale: Vec3 = new Vec3(1, 1, 1);\n\n    // 颜色常量\n    private readonly ACTIVE_COLOR: Color = new Color(255, 204, 0, 255);\n    private readonly INACTIVE_COLOR: Color = new Color(255, 255, 255, 255);\n    private readonly OFFLINE_COLOR: Color = new Color(150, 150, 150, 255);\n\n    onLoad() {\n        this._originalScale = this.node.scale.clone();\n        this.updateIndicators();\n    }\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onPlayerItemClicked, this);\n    }\n\n    onDestroy() {\n        this.node.off(Node.EventType.TOUCH_END, this.onPlayerItemClicked, this);\n    }\n\n    /**\n     * 设置玩家ID\n     */\n    public setPlayerId(id: string): void {\n        this._playerId = id;\n    }\n\n    /**\n     * 获取玩家ID\n     */\n    public getPlayerId(): string {\n        return this._playerId;\n    }\n\n    /**\n     * 设置玩家名称\n     */\n    public setPlayerName(name: string): void {\n        this._playerName = name;\n        if (this.nameLabel) {\n            this.nameLabel.string = name;\n        }\n    }\n\n    /**\n     * 获取玩家名称\n     */\n    public getPlayerName(): string {\n        return this._playerName;\n    }\n\n    /**\n     * 设置玩家头像\n     */\n    public setAvatar(spriteFrame: SpriteFrame): void {\n        if (this.avatar && spriteFrame) {\n            this.avatar.spriteFrame = spriteFrame;\n        }\n    }\n\n    /**\n     * 设置是否为AI玩家\n     */\n    public setIsAI(isAI: boolean, aiType: number = 0): void {\n        this._isAI = isAI;\n        this._aiType = aiType;\n        \n        // 如果是AI，设置AI头像\n        if (isAI && this.aiAvatars && this.aiAvatars.length > 0) {\n            const avatarIndex = aiType % this.aiAvatars.length;\n            this.setAvatar(this.aiAvatars[avatarIndex]);\n        } else if (this.defaultAvatar) {\n            // 否则设置默认头像\n            this.setAvatar(this.defaultAvatar);\n        }\n\n        // 控制 AI 图标的显隐\n        if (this.aiIcon) {\n            this.aiIcon.active = isAI;\n        }\n        \n        this.updateStatusLabel();\n    }\n\n    // Removed setIsCurrentPlayer method\n\n    // Removed setIsActivePlayer method\n\n    /**\n     * 设置玩家准备状态\n     */\n    public setIsReady(isReady: boolean): void {\n        // 如果状态发生变化\n        if (this._isReady !== isReady) {\n            if (isReady) {\n                this.playReadyAnimation();\n            }\n        }\n        \n        this._isReady = isReady;\n        this.updateIndicators();\n        this.updateStatusLabel();\n    }\n\n    /**\n     * 设置玩家在线状态\n     */\n    public setIsOnline(isOnline: boolean): void {\n        // 如果状态从在线变为离线\n        if (this._isOnline && !isOnline) {\n            this.playOfflineAnimation();\n        } else if (!this._isOnline && isOnline) {\n            // 如果状态从离线变为在线\n            this.playOnlineAnimation();\n        }\n        \n        this._isOnline = isOnline;\n        this.updateIndicators();\n        this.updateStatusLabel();\n    }\n\n    // Removed setDiceCount method\n\n    /**\n     * 更新状态标签\n     */\n    private updateStatusLabel(): void {\n        if (!this.statusLabel) return;\n        \n        if (!this._isOnline) {\n            this.statusLabel.string = '离线';\n            this.statusLabel.color = this.OFFLINE_COLOR;\n        } else if (this._isAI) {\n            this.statusLabel.string = 'AI玩家';\n            this.statusLabel.color = new Color(66, 133, 244, 255);\n        } else if (this._isReady) {\n            this.statusLabel.string = '已准备';\n            this.statusLabel.color = new Color(76, 217, 100, 255);\n        } else {\n            this.statusLabel.string = '未准备';\n            this.statusLabel.color = new Color(255, 59, 48, 255);\n        }\n    }\n\n    /**\n     * 更新指示器状态\n     */\n    private updateIndicators(): void {\n        // 当前玩家指示器 (Removed)\n        // if (this.currentPlayerIndicator) {\n        //     this.currentPlayerIndicator.active = this._isCurrentPlayer;\n        // }\n\n        // 准备指示器\n        if (this.readyIndicator) {\n            this.readyIndicator.active = this._isReady && this._isOnline;\n        }\n\n        // 活跃玩家指示器 (Removed)\n        // if (this.activeIndicator) {\n        //     this.activeIndicator.active = this._isActivePlayer && this._isOnline;\n        // }\n\n        // 离线指示器\n        if (this.offlineIndicator) {\n            this.offlineIndicator.active = !this._isOnline;\n        }\n        \n        // 更新颜色\n        if (this.avatar) {\n            if (!this._isOnline) {\n                this.avatar.color = this.OFFLINE_COLOR;\n            // Removed active player color logic\n            // } else if (this._isActivePlayer) {\n            //     this.avatar.color = this.ACTIVE_COLOR;\n            } else {\n                this.avatar.color = this.INACTIVE_COLOR;\n            }\n        }\n    }\n\n    /**\n     * 玩家项被点击的事件处理\n     */\n    private onPlayerItemClicked(): void {\n        // 播放点击反馈动画\n        this.playClickFeedback();\n        \n        // 发出玩家被点击的事件\n        this.node.emit('player-clicked', {\n            playerId: this._playerId,\n            playerName: this._playerName,\n            isAI: this._isAI\n            // Removed isCurrentPlayer from event data\n        });\n    }\n\n    /**\n     * 播放点击反馈动画\n     */\n    private playClickFeedback(): void {\n        tween(this.node)\n            .to(0.1, { scale: new Vec3(this._originalScale.x * 0.95, this._originalScale.y * 0.95, 1) })\n            .to(0.1, { scale: this._originalScale })\n            .start();\n    }\n\n    /**\n     * 播放激活动画（轮到该玩家操作） (Removed)\n     */\n    // private playActivateAnimation(): void { ... }\n\n    /**\n     * 播放准备动画\n     */\n    private playReadyAnimation(): void {\n        if (!this._isOnline) return;\n        \n        // 显示准备指示器\n        if (this.readyIndicator) {\n            this.readyIndicator.active = true;\n            this.readyIndicator.scale = new Vec3(0, 0, 1);\n            \n            // 缩放动画\n            tween(this.readyIndicator)\n                .to(0.3, { \n                    scale: new Vec3(1.2, 1.2, 1)\n                })\n                .to(0.2, { \n                    scale: new Vec3(1, 1, 1)\n                })\n                .start();\n        }\n    }\n\n    /**\n     * 播放离线动画\n     */\n    private playOfflineAnimation(): void {\n        // 灰度动画\n        if (this.avatar) {\n            tween(this.avatar)\n                .to(0.5, { \n                    color: this.OFFLINE_COLOR\n                })\n                .start();\n        }\n        \n        // 显示离线指示器\n        if (this.offlineIndicator) {\n            this.offlineIndicator.active = true;\n            const uiOpacity = this.offlineIndicator.getComponent(UIOpacity) || this.offlineIndicator.addComponent(UIOpacity);\n            uiOpacity.opacity = 0;\n            \n            tween(uiOpacity)\n                .to(0.5, { \n                    opacity: 255\n                })\n                .start();\n        }\n    }\n\n    /**\n     * 播放上线动画\n     */\n    private playOnlineAnimation(): void {\n        // 恢复颜色\n        if (this.avatar) {\n            tween(this.avatar)\n                .to(0.5, {\n                    // Removed active player color logic\n                    color: this.INACTIVE_COLOR\n                })\n                .start();\n        }\n\n        // 隐藏离线指示器\n        if (this.offlineIndicator) {\n            const uiOpacity = this.offlineIndicator.getComponent(UIOpacity) || this.offlineIndicator.addComponent(UIOpacity);\n            \n            tween(uiOpacity)\n                .to(0.5, { \n                    opacity: 0\n                })\n                .call(() => {\n                    this.offlineIndicator.active = false;\n                })\n                .start();\n        }\n    }\n\n    /**\n     * 播放骰子减少动画 (Removed)\n     */\n    // private playDiceReduceAnimation(count: number): void { ... }\n}\n"]}