{"version":3,"sources":["file:///d:/editors/liars_dice_demo/node_modules/zod/lib/helpers/parseUtil.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","__importDefault","mod","__esModule","Object","defineProperty","value","isAsync","isValid","isDirty","isAborted","OK","DIRTY","INVALID","ParseStatus","addIssueToContext","EMPTY_PATH","makeIssue","errors_1","en_1","params","data","path","errorMaps","issueData","fullPath","fullIssue","message","undefined","errorMessage","maps","filter","m","slice","reverse","map","defaultError","ctx","overrideMap","getErrorMap","issue","common","contextualErrorMap","schemaErrorMap","default","x","issues","push","constructor","dirty","abort","mergeArray","status","results","arrayValue","s","mergeObjectAsync","pairs","syncPairs","pair","key","mergeObjectSync","finalObject","alwaysSet","freeze","Promise","_cjsExports","___esModule","_isAsync","_isValid","_isDirty","_isAborted","_OK","_DIRTY","_INVALID","_ParseStatus","_addIssueToContext","_EMPTY_PATH","_makeIssue"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../errors';\nimport { __cjsMetaURL as _req0} from '../locales/en';\nlet _cjsExports;\nlet ___esModule;\nlet _isAsync;\nlet _isValid;\nlet _isDirty;\nlet _isAborted;\nlet _OK;\nlet _DIRTY;\nlet _INVALID;\nlet _ParseStatus;\nlet _addIssueToContext;\nlet _EMPTY_PATH;\nlet _makeIssue;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n var __importDefault = (this && this.__importDefault) || function (mod) {\n     return (mod && mod.__esModule) ? mod : { \"default\": mod };\n };\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\n const errors_1 = require(\"../errors\");\n const en_1 = __importDefault(require(\"../locales/en\"));\n const makeIssue = (params) => {\n     const { data, path, errorMaps, issueData } = params;\n     const fullPath = [...path, ...(issueData.path || [])];\n     const fullIssue = {\n         ...issueData,\n         path: fullPath,\n     };\n     if (issueData.message !== undefined) {\n         return {\n             ...issueData,\n             path: fullPath,\n             message: issueData.message,\n         };\n     }\n     let errorMessage = \"\";\n     const maps = errorMaps\n         .filter((m) => !!m)\n         .slice()\n         .reverse();\n     for (const map of maps) {\n         errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n     }\n     return {\n         ...issueData,\n         path: fullPath,\n         message: errorMessage,\n     };\n };\n exports.makeIssue = makeIssue;\n exports.EMPTY_PATH = [];\n function addIssueToContext(ctx, issueData) {\n     const overrideMap = (0, errors_1.getErrorMap)();\n     const issue = (0, exports.makeIssue)({\n         issueData: issueData,\n         data: ctx.data,\n         path: ctx.path,\n         errorMaps: [\n             ctx.common.contextualErrorMap, // contextual error map is first priority\n             ctx.schemaErrorMap, // then schema-bound map if available\n             overrideMap, // then global override map\n             overrideMap === en_1.default ? undefined : en_1.default, // then global default map\n         ].filter((x) => !!x),\n     });\n     ctx.common.issues.push(issue);\n }\n exports.addIssueToContext = addIssueToContext;\n class ParseStatus {\n     constructor() {\n         this.value = \"valid\";\n     }\n     dirty() {\n         if (this.value === \"valid\")\n             this.value = \"dirty\";\n     }\n     abort() {\n         if (this.value !== \"aborted\")\n             this.value = \"aborted\";\n     }\n     static mergeArray(status, results) {\n         const arrayValue = [];\n         for (const s of results) {\n             if (s.status === \"aborted\")\n                 return exports.INVALID;\n             if (s.status === \"dirty\")\n                 status.dirty();\n             arrayValue.push(s.value);\n         }\n         return { status: status.value, value: arrayValue };\n     }\n     static async mergeObjectAsync(status, pairs) {\n         const syncPairs = [];\n         for (const pair of pairs) {\n             const key = await pair.key;\n             const value = await pair.value;\n             syncPairs.push({\n                 key,\n                 value,\n             });\n         }\n         return ParseStatus.mergeObjectSync(status, syncPairs);\n     }\n     static mergeObjectSync(status, pairs) {\n         const finalObject = {};\n         for (const pair of pairs) {\n             const { key, value } = pair;\n             if (key.status === \"aborted\")\n                 return exports.INVALID;\n             if (value.status === \"aborted\")\n                 return exports.INVALID;\n             if (key.status === \"dirty\")\n                 status.dirty();\n             if (value.status === \"dirty\")\n                 status.dirty();\n             if (key.value !== \"__proto__\" &&\n                 (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                 finalObject[key.value] = value.value;\n             }\n         }\n         return { status: status.value, value: finalObject };\n     }\n }\n exports.ParseStatus = ParseStatus;\n exports.INVALID = Object.freeze({\n     status: \"aborted\",\n });\n const DIRTY = (value) => ({ status: \"dirty\", value });\n exports.DIRTY = DIRTY;\n const OK = (value) => ({ status: \"valid\", value });\n exports.OK = OK;\n const isAborted = (x) => x.status === \"aborted\";\n exports.isAborted = isAborted;\n const isDirty = (x) => x.status === \"dirty\";\n exports.isDirty = isDirty;\n const isValid = (x) => x.status === \"valid\";\n exports.isValid = isValid;\n const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n exports.isAsync = isAsync;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_isAsync = module.exports.isAsync;\n_isValid = module.exports.isValid;\n_isDirty = module.exports.isDirty;\n_isAborted = module.exports.isAborted;\n_OK = module.exports.OK;\n_DIRTY = module.exports.DIRTY;\n_INVALID = module.exports.INVALID;\n_ParseStatus = module.exports.ParseStatus;\n_addIssueToContext = module.exports.addIssueToContext;\n_EMPTY_PATH = module.exports.EMPTY_PATH;\n_makeIssue = module.exports.makeIssue;\n\n}, () => ({\n  '../errors': _req,\n  '../locales/en': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}