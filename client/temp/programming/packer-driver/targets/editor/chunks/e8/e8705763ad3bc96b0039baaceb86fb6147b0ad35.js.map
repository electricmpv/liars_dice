{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/ui/lobby/lobby-controller.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","ScrollView","director","RoomItem","PlayerItem","ChatItem","FilterTab","SystemNotice","FriendRequest","RoomService","FriendService","ChatService","ccclass","property","LobbyState","LobbyController","_roomService","_friendService","_chatService","_currentState","ROOM_LIST","_filterTabs","Map","_systemNotice","_cachedRooms","_cachedFriends","_cachedMessages","_isJoiningRoom","onLoad","initServices","initSystemNotice","setupEventListeners","start","setState","loadInitialData","createFilterTabs","onDestroy","removeEventListeners","systemNoticePrefab","noticeContainer","noticeNode","addChild","getComponent","on","updateRoomList","onRoomCreated","onRoomJoined","onRoomJoinFailed","updateFriendList","showFriendRequest","updateFriendStatus","onMessageReceived","onMessageSent","onChatError","off","showNotice","Promise","all","fetchRooms","fetchFriends","connect","error","console","filterTabPrefab","filterTabsContainer","roomTabs","id","name","createTabGroup","onRoomFilterChanged","bind","friendTabs","onFriendFilterChanged","groupId","tabs","callback","group","forEach","tab","index","tabNode","tabComp","setTabId","setTabName","setGroupId","setTabIndex","setSelected","event","otherTab","push","set","newState","updateUIState","roomListPanel","active","friendListPanel","rankListPanel","settingsPanel","FRIEND_LIST","RANKING","SETTINGS","updateFilterTabsVisibility","visible","node","switchToRoomList","switchToFriendList","switchToRanking","switchToSettings","filterId","setFilter","rooms","roomListContainer","roomItemPrefab","removeAllChildren","filteredRooms","getFilteredRooms","roomAvailable","adaptedInfo","adaptRoomAvailable","roomNode","roomComp","setRoomInfo","roomId","roomName","playerCount","maxPlayers","status","hasPassword","isPrivate","hasFriends","onRoomItemClicked","onJoinRoomClicked","playNewItemAnimation","roomScrollView","scrollToTop","friends","friendListContainer","playerItemPrefab","filteredFriends","getFilteredFriends","friend","playerNode","playerComp","setPlayerId","setPlayerName","setIsOnline","isOnline","avatar","setAvatar","onPlayerItemClicked","friendScrollView","addChatMessage","message","chatMessageContainer","chatItemPrefab","chatNode","chatComp","setMessageData","type","senderId","senderName","content","timestamp","playNewMessageAnimation","chatScrollView","scrollToBottom","length","shift","text","duration","isPersistent","show","requestInfo","friendRequestPrefab","popupLayer","requestNode","requestComp","requestId","requestType","acceptFriendRequest","detail","rejectFriendRequest","friendInfo","find","f","roomInfo","log","warn","joinRoom","finally","playerInfo","loadScene","err","createRoom","sendChatMessage","sendMessage","sendFriendRequest","userId","onQuickJoinClicked","onRefreshClicked","catch","onBackButtonClick","onSettingsButtonClicked","onSearchRoomClicked"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, ScrollView, director } from 'cc'; // 导入 director\nimport { RoomItem } from '../../prefabs/room-item';\nimport { PlayerItem } from '../../prefabs/player-item';\nimport { ChatItem } from '../../prefabs/chat-item';\nimport { FilterTab } from '../../prefabs/filter-tab';\nimport { SystemNotice } from '../../prefabs/system-notice';\nimport { FriendRequest } from '../../prefabs/friend-request';\nimport { RoomService, SimplifiedRoomInfo } from './services/room-service'; // RoomService now exports SimplifiedRoomInfo adaptation helper\nimport { FriendService } from './services/friend-service';\nimport { ChatService } from './services/chat-service';\nimport type { RoomAvailable } from 'colyseus.js'; // Import Colyseus type\n// Corrected relative path (5 levels up) and removing .ts extension\nimport { RoomStatus as SharedRoomStatus } from '../../../../../shared/protocols/room-protocol';\n\nconst { ccclass, property } = _decorator;\n\n// 大厅状态枚举\nenum LobbyState {\n    ROOM_LIST,      // 房间列表\n    FRIEND_LIST,    // 好友列表\n    RANKING,        // 排行榜\n    SETTINGS        // 设置\n}\n\n/**\n * 大厅场景控制器\n * 功能：\n * 1. 管理大厅UI和交互逻辑\n * 2. 协调房间列表、好友列表、聊天系统等模块\n * 3. 处理状态切换和场景跳转\n */\n@ccclass('LobbyController')\nexport class LobbyController extends Component {\n    // 预制体引用\n    @property(Prefab)\n    roomItemPrefab: Prefab = null!;\n    \n    @property(Prefab)\n    playerItemPrefab: Prefab = null!;\n    \n    @property(Prefab)\n    chatItemPrefab: Prefab = null!;\n\n    @property(Prefab)\n    filterTabPrefab: Prefab = null!;\n\n    @property(Prefab)\n    systemNoticePrefab: Prefab = null!;\n\n    @property(Prefab)\n    friendRequestPrefab: Prefab = null!;\n\n    // UI容器引用\n    @property(Node)\n    roomListContainer: Node = null!;\n    \n    @property(Node)\n    friendListContainer: Node = null!;\n    \n    @property(Node)\n    chatMessageContainer: Node = null!;\n\n    @property(Node)\n    filterTabsContainer: Node = null!;\n\n    @property(Node)\n    noticeContainer: Node = null!;\n\n    @property(Node)\n    popupLayer: Node = null!;\n\n    @property(ScrollView)\n    roomScrollView: ScrollView = null!;\n\n    @property(ScrollView)\n    friendScrollView: ScrollView = null!;\n\n    @property(ScrollView)\n    chatScrollView: ScrollView = null!;\n\n    // UI面板引用\n    @property(Node)\n    headerPanel: Node = null!;\n\n    @property(Node)\n    contentPanel: Node = null!;\n\n    @property(Node)\n    footerPanel: Node = null!;\n\n    @property(Node)\n    roomListPanel: Node = null!;\n\n    @property(Node)\n    friendListPanel: Node = null!;\n\n    @property(Node)\n    rankListPanel: Node = null!;\n\n    @property(Node)\n    settingsPanel: Node = null!;\n\n    // 服务实例\n    private _roomService: RoomService = null!;\n    private _friendService: FriendService = null!;\n    private _chatService: ChatService = null!;\n\n    // 状态管理\n    private _currentState: LobbyState = LobbyState.ROOM_LIST;\n    private _filterTabs: Map<string, FilterTab[]> = new Map(); // 分组管理过滤标签\n    private _systemNotice: SystemNotice = null!; // 系统通知实例\n\n    // 缓存的数据\n    private _cachedRooms: RoomAvailable[] = []; // Store RoomAvailable from RoomService\n    private _cachedFriends: any[] = []; // Keep as any[] for now, adapt later if needed\n    private _cachedMessages: any[] = []; // Keep as any[]\n\n    // 用于防止重复加入\n    private _isJoiningRoom: boolean = false;\n\n    onLoad() {\n        this.initServices();\n        this.initSystemNotice();\n        this.setupEventListeners();\n    }\n\n    start() {\n        // 初始化默认状态\n        this.setState(LobbyState.ROOM_LIST);\n        \n        // 加载初始数据\n        this.loadInitialData();\n        \n        // 创建过滤标签\n        this.createFilterTabs();\n    }\n\n    onDestroy() {\n        this.removeEventListeners();\n        \n        // 销毁服务实例\n        if (this._roomService && typeof (this._roomService as any).onDestroy === 'function') {\n            (this._roomService as any).onDestroy();\n        }\n        if (this._friendService && typeof (this._friendService as any).onDestroy === 'function') {\n            (this._friendService as any).onDestroy();\n        }\n        if (this._chatService && typeof (this._chatService as any).onDestroy === 'function') {\n            (this._chatService as any).onDestroy();\n        }\n    }\n\n    /**\n     * 初始化服务\n     */\n    private initServices(): void {\n        this._roomService = new RoomService();\n        this._friendService = new FriendService();\n        this._chatService = new ChatService();\n    }\n\n    /**\n     * 初始化系统通知组件\n     */\n    private initSystemNotice(): void {\n        if (this.systemNoticePrefab && this.noticeContainer) {\n            const noticeNode = instantiate(this.systemNoticePrefab);\n            this.noticeContainer.addChild(noticeNode);\n            this._systemNotice = noticeNode.getComponent(SystemNotice)!;\n        }\n    }\n\n    /**\n     * 设置事件监听\n     */\n    private setupEventListeners(): void {\n        // 房间相关事件\n        this._roomService.on('room-list-updated', this.updateRoomList, this);\n        this._roomService.on('room-created', this.onRoomCreated, this);\n        this._roomService.on('room-joined', this.onRoomJoined, this);\n        this._roomService.on('room-join-failed', this.onRoomJoinFailed, this);\n        \n        // 好友相关事件\n        this._friendService.on('friend-list-updated', this.updateFriendList, this);\n        this._friendService.on('friend-request-received', this.showFriendRequest, this);\n        this._friendService.on('friend-status-changed', this.updateFriendStatus, this);\n        \n        // 聊天相关事件\n        this._chatService.on('message-received', this.onMessageReceived, this);\n        this._chatService.on('message-sent', this.onMessageSent, this);\n        this._chatService.on('chat-error', this.onChatError, this);\n    }\n\n    /**\n     * 移除事件监听\n     */\n    private removeEventListeners(): void {\n        // 房间相关事件\n        this._roomService.off('room-list-updated', this.updateRoomList, this);\n        this._roomService.off('room-created', this.onRoomCreated, this);\n        this._roomService.off('room-joined', this.onRoomJoined, this);\n        this._roomService.off('room-join-failed', this.onRoomJoinFailed, this);\n        \n        // 好友相关事件\n        this._friendService.off('friend-list-updated', this.updateFriendList, this);\n        this._friendService.off('friend-request-received', this.showFriendRequest, this);\n        this._friendService.off('friend-status-changed', this.updateFriendStatus, this);\n        \n        // 聊天相关事件\n        this._chatService.off('message-received', this.onMessageReceived, this);\n        this._chatService.off('message-sent', this.onMessageSent, this);\n        this._chatService.off('chat-error', this.onChatError, this);\n    }\n\n    /**\n     * 加载初始数据\n     */\n    private async loadInitialData(): Promise<void> {\n        try {\n            // 显示加载中通知\n            this.showNotice(\"正在加载数据...\", \"info\");\n\n            // 并行加载数据\n            await Promise.all([\n                this._roomService.fetchRooms(),\n                this._friendService.fetchFriends(),\n                this._chatService.connect()\n            ]);\n\n            // 显示成功通知\n            this.showNotice(\"数据加载完成\", \"success\");\n        } catch (error) {\n            console.error(\"加载数据失败:\", error);\n            this.showNotice(\"数据加载失败，请重试\", \"error\");\n        }\n    }\n\n    /**\n     * 创建过滤标签\n     */\n    private createFilterTabs(): void {\n        if (!this.filterTabPrefab || !this.filterTabsContainer) return;\n        \n        // 创建房间过滤标签\n        const roomTabs = [\n            { id: 'all', name: '全部房间' },\n            { id: 'waiting', name: '等待中' },\n            { id: 'playing', name: '游戏中' },\n            { id: 'friends', name: '好友房间' }\n        ];\n        \n        this.createTabGroup('room', roomTabs, this.onRoomFilterChanged.bind(this));\n        \n        // 创建好友过滤标签\n        const friendTabs = [\n            { id: 'all', name: '全部好友' },\n            { id: 'online', name: '在线好友' },\n            { id: 'playing', name: '游戏中' }\n        ];\n        \n        this.createTabGroup('friend', friendTabs, this.onFriendFilterChanged.bind(this));\n    }\n\n    /**\n     * 创建标签组\n     */\n    private createTabGroup(groupId: string, tabs: {id: string, name: string}[], callback: Function): void {\n        if (!this.filterTabPrefab || !this.filterTabsContainer) return;\n        \n        const group: FilterTab[] = [];\n        \n        tabs.forEach((tab, index) => {\n            const tabNode = instantiate(this.filterTabPrefab);\n            const tabComp = tabNode.getComponent(FilterTab)!;\n            \n            tabComp.setTabId(tab.id);\n            tabComp.setTabName(tab.name);\n            tabComp.setGroupId(groupId);\n            tabComp.setTabIndex(index);\n            \n            // 设置第一个标签为选中状态\n            if (index === 0) {\n                tabComp.setSelected(true);\n            }\n            \n            // 添加标签切换事件\n            tabNode.on('tab-selected', (event: any) => {\n                // 更新同组其他标签状态\n                group.forEach(otherTab => {\n                    if (otherTab !== tabComp) {\n                        otherTab.setSelected(false);\n                    }\n                });\n                \n                // 调用回调\n                if (callback) {\n                    callback(tab.id);\n                }\n            });\n            \n            this.filterTabsContainer.addChild(tabNode);\n            group.push(tabComp);\n        });\n        \n        this._filterTabs.set(groupId, group);\n    }\n\n    /**\n     * 设置当前状态\n     */\n    public setState(newState: LobbyState): void {\n        this._currentState = newState;\n        this.updateUIState();\n    }\n\n    /**\n     * 更新UI状态\n     */\n    private updateUIState(): void {\n        // 隐藏所有面板\n        if (this.roomListPanel) this.roomListPanel.active = false;\n        if (this.friendListPanel) this.friendListPanel.active = false;\n        if (this.rankListPanel) this.rankListPanel.active = false;\n        if (this.settingsPanel) this.settingsPanel.active = false;\n        \n        // 显示当前状态对应的面板\n        switch (this._currentState) {\n            case LobbyState.ROOM_LIST:\n                if (this.roomListPanel) this.roomListPanel.active = true;\n                // 更新房间列表\n                this.updateRoomList(this._cachedRooms);\n                break;\n                \n            case LobbyState.FRIEND_LIST:\n                if (this.friendListPanel) this.friendListPanel.active = true;\n                // 更新好友列表\n                this.updateFriendList(this._cachedFriends);\n                break;\n                \n            case LobbyState.RANKING:\n                if (this.rankListPanel) this.rankListPanel.active = true;\n                break;\n                \n            case LobbyState.SETTINGS:\n                if (this.settingsPanel) this.settingsPanel.active = true;\n                break;\n        }\n        \n        // 更新过滤标签显示\n        this.updateFilterTabsVisibility();\n    }\n\n    /**\n     * 更新过滤标签显示\n     */\n    private updateFilterTabsVisibility(): void {\n        if (!this.filterTabsContainer) return;\n        \n        // 获取所有分组\n        this._filterTabs.forEach((tabs, groupId) => {\n            // 根据当前状态决定是否显示\n            const visible = \n                (groupId === 'room' && this._currentState === LobbyState.ROOM_LIST) || \n                (groupId === 'friend' && this._currentState === LobbyState.FRIEND_LIST);\n            \n            // 设置标签显示/隐藏\n            tabs.forEach(tab => {\n                tab.node.active = visible;\n            });\n        });\n    }\n\n    /**\n     * 切换到房间列表\n     */\n    public switchToRoomList(): void {\n        this.setState(LobbyState.ROOM_LIST);\n    }\n\n    /**\n     * 切换到好友列表\n     */\n    public switchToFriendList(): void {\n        this.setState(LobbyState.FRIEND_LIST);\n    }\n\n    /**\n     * 切换到排行榜\n     */\n    public switchToRanking(): void {\n        this.setState(LobbyState.RANKING);\n    }\n\n    /**\n     * 切换到设置\n     */\n    public switchToSettings(): void {\n        this.setState(LobbyState.SETTINGS);\n    }\n\n    /**\n     * 房间过滤器改变\n     */\n    private onRoomFilterChanged(filterId: string): void {\n        this._roomService.setFilter(filterId);\n        this.updateRoomList(this._cachedRooms);\n    }\n\n    /**\n     * 好友过滤器改变\n     */\n    private onFriendFilterChanged(filterId: string): void {\n        this._friendService.setFilter(filterId);\n        this.updateFriendList(this._cachedFriends);\n    }\n\n    /**\n     * 更新房间列表 (适配 Colyseus RoomAvailable)\n     */\n    private updateRoomList(rooms: RoomAvailable[]): void { // Change parameter type\n        if (!this.roomListContainer || !this.roomItemPrefab) return;\n\n        // 缓存房间列表\n        this._cachedRooms = rooms;\n        \n        // 如果不是房间列表状态，不更新UI\n        if (this._currentState !== LobbyState.ROOM_LIST) return;\n        \n        // 清空当前列表\n        this.roomListContainer.removeAllChildren();\n        \n        // 获取过滤后的房间\n        const filteredRooms = this._roomService.getFilteredRooms(rooms);\n        \n        // 添加房间项\n        // 添加房间项 - 使用适配器转换 RoomAvailable\n        filteredRooms.forEach(roomAvailable => { // Variable renamed for clarity\n            const adaptedInfo = RoomService.adaptRoomAvailable(roomAvailable); // Use static adapter method\n\n            const roomNode = instantiate(this.roomItemPrefab);\n            const roomComp = roomNode.getComponent(RoomItem)!;\n\n            // Pass the adapted info to the RoomItem component\n            roomComp.setRoomInfo({\n                roomId: adaptedInfo.id,\n                roomName: adaptedInfo.name,\n                playerCount: adaptedInfo.playerCount,\n                maxPlayers: adaptedInfo.maxPlayers,\n                status: adaptedInfo.status as SharedRoomStatus, // Cast status to expected type\n                hasPassword: adaptedInfo.hasPassword ?? false, // Provide default value\n                isPrivate: adaptedInfo.isPrivate ?? false, // Provide default value\n                hasFriends: false // TODO: Implement friend logic later\n            });\n\n            // 监听房间点击事件\n            roomNode.on('room-item-clicked', () => this.onRoomItemClicked(adaptedInfo), this); // Pass adaptedInfo\n            roomNode.on('join-room', () => this.onJoinRoomClicked(adaptedInfo), this); // Pass adaptedInfo\n\n            this.roomListContainer.addChild(roomNode);\n            \n            // 播放新增动画\n            roomComp.playNewItemAnimation();\n        });\n        \n        // 刷新滚动视图\n        if (this.roomScrollView) {\n            this.roomScrollView.scrollToTop();\n        }\n    }\n\n    /**\n     * 更新好友列表\n     */\n    private updateFriendList(friends: any[]): void {\n        if (!this.friendListContainer || !this.playerItemPrefab) return;\n        \n        // 缓存好友列表\n        this._cachedFriends = friends;\n        \n        // 如果不是好友列表状态，不更新UI\n        if (this._currentState !== LobbyState.FRIEND_LIST) return;\n        \n        // 清空当前列表\n        this.friendListContainer.removeAllChildren();\n        \n        // 获取过滤后的好友\n        const filteredFriends = this._friendService.getFilteredFriends(friends);\n        \n        // 添加好友项\n        filteredFriends.forEach(friend => {\n            const playerNode = instantiate(this.playerItemPrefab);\n            const playerComp = playerNode.getComponent(PlayerItem)!;\n            \n            playerComp.setPlayerId(friend.id);\n            playerComp.setPlayerName(friend.name);\n            playerComp.setIsOnline(friend.isOnline);\n            \n            if (friend.avatar) {\n                playerComp.setAvatar(friend.avatar);\n            }\n            \n            // 监听玩家点击事件\n            playerNode.on('player-item-clicked', this.onPlayerItemClicked, this);\n            \n            this.friendListContainer.addChild(playerNode);\n        });\n        \n        // 刷新滚动视图\n        if (this.friendScrollView) {\n            this.friendScrollView.scrollToTop();\n        }\n    }\n\n    /**\n     * 添加聊天消息\n     */\n    private addChatMessage(message: any): void {\n        if (!this.chatMessageContainer || !this.chatItemPrefab) return;\n        \n        // 创建消息项\n        const chatNode = instantiate(this.chatItemPrefab);\n        const chatComp = chatNode.getComponent(ChatItem)!;\n        \n        chatComp.setMessageData({\n            id: message.id,\n            type: message.type,\n            senderId: message.senderId,\n            senderName: message.senderName,\n            content: message.content,\n            timestamp: message.timestamp\n        });\n        \n        // 添加到消息容器\n        this.chatMessageContainer.addChild(chatNode);\n        \n        // 播放新消息动画\n        chatComp.playNewMessageAnimation();\n        \n        // 滚动到最新消息\n        if (this.chatScrollView) {\n            this.chatScrollView.scrollToBottom();\n        }\n        \n        // 缓存消息\n        this._cachedMessages.push(message);\n        \n        // 限制缓存消息数量\n        if (this._cachedMessages.length > 100) {\n            this._cachedMessages.shift();\n        }\n    }\n\n    /**\n     * 显示系统通知\n     */\n    public showNotice(text: string, type: 'info' | 'warning' | 'error' | 'success' = 'info', duration?: number, isPersistent: boolean = false): void {\n        if (this._systemNotice) {\n            this._systemNotice.show(text, type, duration, isPersistent);\n        }\n    }\n\n    /**\n     * 显示好友请求\n     */\n    private showFriendRequest(requestInfo: any): void {\n        if (!this.friendRequestPrefab || !this.popupLayer) return;\n        \n        // 创建好友请求节点\n        const requestNode = instantiate(this.friendRequestPrefab);\n        const requestComp = requestNode.getComponent(FriendRequest)!;\n        \n        // 设置请求信息\n        requestComp.show({\n            requestId: requestInfo.id,\n            senderId: requestInfo.senderId,\n            senderName: requestInfo.senderName,\n            message: requestInfo.message,\n            requestType: requestInfo.type\n        });\n        \n        // 监听请求事件\n        requestNode.on('request-accepted', (event: any) => {\n            this._friendService.acceptFriendRequest(event.detail.requestId);\n            this.showNotice(`已接受 ${event.detail.senderName} 的好友请求`, 'success');\n        }, this);\n        \n        requestNode.on('request-rejected', (event: any) => {\n            this._friendService.rejectFriendRequest(event.detail.requestId);\n        }, this);\n        \n        this.popupLayer.addChild(requestNode);\n    }\n\n    /**\n     * 更新好友状态\n     */\n    private updateFriendStatus(friendInfo: any): void {\n        // 更新缓存中的好友状态\n        const friend = this._cachedFriends.find(f => f.id === friendInfo.id);\n        if (friend) {\n            friend.isOnline = friendInfo.isOnline;\n            friend.status = friendInfo.status;\n        }\n        \n        // 如果是好友列表状态，更新UI\n        if (this._currentState === LobbyState.FRIEND_LIST) {\n            this.updateFriendList(this._cachedFriends);\n        }\n        \n        // 如果从离线变为在线，显示通知\n        if (friendInfo.isOnline && friend && !friend.isOnline) {\n            this.showNotice(`好友 ${friendInfo.name} 上线了`, 'info');\n        }\n    }\n\n    /**\n     * 房间项点击事件 (接收 SimplifiedRoomInfo)\n     */\n    private onRoomItemClicked(roomInfo: SimplifiedRoomInfo): void {\n        // const roomInfo = event.detail; // No longer using event detail\n        console.log('房间点击:', roomInfo);\n        \n        // 显示房间详情\n        // TODO: 实现房间详情展示\n    }\n\n    /**\n    // 用于防止重复加入\n    private _isJoiningRoom: boolean = false;\n\n    /**\n     * 加入房间按钮点击事件 (接收 SimplifiedRoomInfo)\n     */\n    private onJoinRoomClicked(roomInfo: SimplifiedRoomInfo): void { // Change parameter type\n        if (this._isJoiningRoom) {\n            console.warn('[LobbyController] Already attempting to join a room.');\n            return; // 防止重复点击\n        }\n        this._isJoiningRoom = true; // 设置标志位\n\n        console.log('加入房间 (Simplified):', roomInfo); // Log adapted info\n\n        // Use adaptedInfo.id instead of roomInfo.roomId\n        if (!roomInfo || !roomInfo.id) {\n            console.error('[LobbyController] onJoinRoomClicked: 无效的 roomInfo 或 id');\n            this.showNotice(\"加入房间失败：无效的房间信息\", \"error\");\n            this._isJoiningRoom = false; // 重置标志位\n            return;\n        }\n\n        // 检查房间是否有密码 (use adaptedInfo.hasPassword)\n        if (roomInfo.hasPassword) {\n            // TODO: Implement password input popup logic\n            this.showNotice(\"该房间需要密码，暂不支持加入\", \"warning\");\n            this._isJoiningRoom = false; // 重置标志位\n        } else {\n            // No password, join directly using adaptedInfo.id\n            this.showNotice(`正在加入房间 ${roomInfo.name || roomInfo.id}...`, \"info\"); // Use adapted name/id\n            // No need to check typeof id, as it's guaranteed string by interface\n            this._roomService.joinRoom(roomInfo.id)\n                .finally(() => {\n                    // Reset the flag regardless of success/failure (event is emitted by service)\n                    this._isJoiningRoom = false;\n                });\n            // No need for the 'else' block checking typeof roomId\n        }\n    }\n\n    /**\n     * 玩家项点击事件\n     */\n    private onPlayerItemClicked(event: any): void {\n        const playerInfo = event.detail;\n        console.log('玩家点击:', playerInfo);\n        \n        // 显示玩家信息菜单\n        // TODO: 实现玩家信息菜单\n    }\n\n    /**\n     * 房间创建成功事件\n     */\n    private onRoomCreated(roomInfo: any): void {\n        this.showNotice(`房间 \"${roomInfo.name}\" 创建成功`, 'success');\n        // TODO: 跳转到游戏场景\n    }\n\n    /**\n     * 房间加入成功事件\n     */\n    private onRoomJoined(roomInfo: any): void {\n        this.showNotice(`已加入房间 \"${roomInfo.name}\"`, 'success');\n        // 跳转到游戏场景 (假设场景名为 RoomScene)\n        console.log(`[LobbyController] 准备跳转到房间场景: RoomScene, 房间信息:`, roomInfo);\n        // 可以在跳转前保存一些需要传递给下一个场景的数据\n        // director.settings.set('currentRoomInfo', roomInfo); // 示例：使用 settings 传递数据\n        director.loadScene('RoomScene', (err) => {\n            if (err) {\n                console.error(`[LobbyController] 跳转到 RoomScene 失败:`, err);\n                this.showNotice(\"跳转房间场景失败\", \"error\");\n            }\n        });\n    }\n\n    /**\n     * 房间加入失败事件\n     */\n    private onRoomJoinFailed(error: any): void {\n        // 加入失败时 RoomService 会发出事件，这里显示通知\n        // _isJoiningRoom 标志位已在 joinRoom 的 finally 块中重置\n        this.showNotice(`加入房间失败: ${error.error || '未知错误'}`, 'error'); // 使用 error.error\n    }\n\n    /**\n     * 消息接收事件\n     */\n    private onMessageReceived(message: any): void {\n        this.addChatMessage(message);\n    }\n\n    /**\n     * 消息发送事件\n     */\n    private onMessageSent(message: any): void {\n        this.addChatMessage(message);\n    }\n\n    /**\n     * 聊天错误事件\n     */\n    private onChatError(error: any): void {\n        this.showNotice(`聊天错误: ${error.message}`, 'error');\n    }\n\n    /**\n     * 创建房间\n     */\n    public createRoom(roomInfo: any): void {\n        this._roomService.createRoom(roomInfo);\n    }\n\n    /**\n     * 发送聊天消息\n     */\n    public sendChatMessage(content: string): void {\n        this._chatService.sendMessage(content);\n    }\n\n    /**\n     * 发送好友请求\n     */\n    public sendFriendRequest(userId: string, message?: string): void {\n        // 显式处理 undefined 情况\n        if (typeof message === 'string') {\n            this._friendService.sendFriendRequest(userId, message);\n        } else {\n            // 如果 message 是 undefined 或其他非字符串类型，传递空字符串\n            this._friendService.sendFriendRequest(userId, '');\n        }\n    }\n\n    /**\n     * 快速加入按钮点击处理\n     */\n    public onQuickJoinClicked(): void {\n        console.log('[LobbyController] Quick Join button clicked.');\n        this.showNotice(\"正在尝试快速加入...\", \"info\");\n        // TODO: 调用 RoomService 的快速加入逻辑\n        // this._roomService.quickJoin().catch(error => {\n        //     this.showNotice(`快速加入失败: ${error.message}`, 'error');\n        // });\n    }\n\n    /**\n     * 刷新按钮点击处理\n     */\n    public onRefreshClicked(): void {\n        console.log('[LobbyController] Refresh button clicked.');\n        this.showNotice(\"正在刷新房间列表...\", \"info\");\n        this.loadInitialData().catch(error => {\n             // 错误已在 loadInitialData 内部处理并显示通知\n             console.error('[LobbyController] Error refreshing data:', error);\n        });\n    }\n\n    /**\n     * 返回按钮点击处理\n     */\n    public onBackButtonClick(): void {\n        console.log('[LobbyController] Back button clicked.');\n        // 返回登录场景\n        director.loadScene('LoginScene', (err) => {\n            if (err) {\n                console.error(`[LobbyController] 跳转到 LoginScene 失败:`, err);\n                this.showNotice(\"返回登录失败\", \"error\");\n            }\n        });\n    }\n\n    /**\n     * 设置按钮点击处理\n     */\n    public onSettingsButtonClicked(): void {\n        console.log('[LobbyController] Settings button clicked.');\n        this.switchToSettings();\n    }\n\n    /**\n     * 搜索房间按钮点击处理\n     */\n    public onSearchRoomClicked(): void {\n        console.log('[LobbyController] Search Room button clicked.');\n        // TODO: 实现搜索房间的 UI 逻辑，例如弹出搜索框\n        this.showNotice(\"搜索功能暂未实现\", \"warning\");\n    }\n}\n"]}