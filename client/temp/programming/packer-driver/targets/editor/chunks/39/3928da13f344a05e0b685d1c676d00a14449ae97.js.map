{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/ui/lobby/services/friend-service.ts"],"names":["FriendService","constructor","_listeners","Map","_friendList","_currentFilter","_socket","init","initSocketConnection","console","log","setInterval","simulateFriendStatusUpdate","fetchFriends","Promise","resolve","setTimeout","getMockFriends","emit","setFilter","filter","getFilter","getFilteredFriends","friends","friend","isOnline","status","sendFriendRequest","userId","message","id","Date","now","toString","substr","targetId","acceptFriendRequest","requestId","newFriend","name","Math","floor","random","avatar","level","addedAt","unshift","rejectFriendRequest","removeFriend","friendId","index","findIndex","f","removedFriend","splice","updateFriendStatus","find","undefined","length","randomIndex","newIsOnline","newStatus","simulateReceiveFriendRequest","names","randomName","request","senderId","senderName","timestamp","on","eventName","callback","target","has","set","get","push","off","listeners","i","listener","args","apply"],"mappings":"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","sourcesContent":["import { sys } from 'cc';\n\n/**\n * 好友服务类\n * 负责处理好友相关的网络请求和数据管理\n */\nexport class FriendService {\n    private _listeners: Map<string, Array<{ callback: Function, target: any }>> = new Map();\n    private _friendList: any[] = [];\n    private _currentFilter: string = 'all';\n    private _socket: any = null;\n\n    constructor() {\n        this.init();\n    }\n\n    /**\n     * 初始化\n     */\n    private init(): void {\n        // 初始化WebSocket连接（真实环境中应连接到实际服务器）\n        this.initSocketConnection();\n    }\n\n    /**\n     * 初始化Socket连接\n     */\n    private initSocketConnection(): void {\n        // 真实环境中应连接到实际的WebSocket服务器\n        // 这里只是模拟实现\n        console.log('[FriendService] 初始化Socket连接');\n        \n        // 模拟接收好友状态更新\n        setInterval(() => {\n            this.simulateFriendStatusUpdate();\n        }, 30000); // 每30秒模拟一次\n    }\n\n    /**\n     * 获取好友列表\n     */\n    public async fetchFriends(): Promise<any[]> {\n        return new Promise((resolve) => {\n            // 模拟网络请求\n            setTimeout(() => {\n                this._friendList = this.getMockFriends();\n                this.emit('friend-list-updated', this._friendList);\n                resolve(this._friendList);\n            }, 600);\n        });\n    }\n\n    /**\n     * 设置过滤器\n     */\n    public setFilter(filter: string): void {\n        this._currentFilter = filter;\n    }\n\n    /**\n     * 获取当前过滤器\n     */\n    public getFilter(): string {\n        return this._currentFilter;\n    }\n\n    /**\n     * 获取过滤后的好友列表\n     */\n    public getFilteredFriends(friends: any[]): any[] {\n        switch (this._currentFilter) {\n            case 'online':\n                return friends.filter(friend => friend.isOnline);\n            case 'playing':\n                return friends.filter(friend => friend.isOnline && friend.status === 1);\n            case 'all':\n            default:\n                return friends;\n        }\n    }\n\n    /**\n     * 发送好友请求\n     */\n    public sendFriendRequest(userId: string, message?: string): void {\n        console.log(`[FriendService] 发送好友请求给用户 ${userId}，消息：${message || '无'}`);\n        \n        // 模拟发送好友请求\n        setTimeout(() => {\n            this.emit('friend-request-sent', {\n                id: `FR${Date.now().toString().substr(-6)}`,\n                targetId: userId,\n                message: message || '请求添加您为好友'\n            });\n        }, 500);\n    }\n\n    /**\n     * 接受好友请求\n     */\n    public acceptFriendRequest(requestId: string): void {\n        console.log(`[FriendService] 接受好友请求 ${requestId}`);\n        \n        // 模拟接受好友请求\n        setTimeout(() => {\n            // 创建一个新的好友\n            const newFriend = {\n                id: `user_${Date.now().toString().substr(-6)}`,\n                name: `玩家${Math.floor(Math.random() * 1000)}`,\n                avatar: null,\n                isOnline: true,\n                status: 0,\n                level: Math.floor(Math.random() * 30) + 1,\n                addedAt: Date.now()\n            };\n            \n            // 添加到好友列表\n            this._friendList.unshift(newFriend);\n            \n            // 触发事件\n            this.emit('friend-request-accepted', { requestId, friend: newFriend });\n            this.emit('friend-list-updated', this._friendList);\n        }, 500);\n    }\n\n    /**\n     * 拒绝好友请求\n     */\n    public rejectFriendRequest(requestId: string): void {\n        console.log(`[FriendService] 拒绝好友请求 ${requestId}`);\n        \n        // 模拟拒绝好友请求\n        setTimeout(() => {\n            this.emit('friend-request-rejected', { requestId });\n        }, 300);\n    }\n\n    /**\n     * 删除好友\n     */\n    public removeFriend(friendId: string): void {\n        console.log(`[FriendService] 删除好友 ${friendId}`);\n        \n        // 查找好友\n        const index = this._friendList.findIndex(f => f.id === friendId);\n        if (index === -1) {\n            return;\n        }\n        \n        // 模拟删除好友\n        setTimeout(() => {\n            // 从列表中移除\n            const removedFriend = this._friendList.splice(index, 1)[0];\n            \n            // 触发事件\n            this.emit('friend-removed', removedFriend);\n            this.emit('friend-list-updated', this._friendList);\n        }, 500);\n    }\n\n    /**\n     * 更新好友状态\n     */\n    public updateFriendStatus(friendId: string, isOnline: boolean, status?: number): void {\n        console.log(`[FriendService] 更新好友 ${friendId} 状态，在线：${isOnline}，状态：${status}`);\n        \n        // 查找好友\n        const friend = this._friendList.find(f => f.id === friendId);\n        if (!friend) {\n            return;\n        }\n        \n        // 更新状态\n        friend.isOnline = isOnline;\n        if (status !== undefined) {\n            friend.status = status;\n        }\n        \n        // 触发事件\n        this.emit('friend-status-changed', friend);\n        this.emit('friend-list-updated', this._friendList);\n    }\n\n    /**\n     * 模拟好友状态更新\n     */\n    private simulateFriendStatusUpdate(): void {\n        if (this._friendList.length === 0) {\n            return;\n        }\n        \n        // 随机选择一个好友\n        const randomIndex = Math.floor(Math.random() * this._friendList.length);\n        const friend = this._friendList[randomIndex];\n        \n        // 随机更新状态\n        const newIsOnline = Math.random() > 0.3; // 70%概率在线\n        const newStatus = Math.floor(Math.random() * 3); // 0-2的状态\n        \n        // 更新状态\n        this.updateFriendStatus(friend.id, newIsOnline, newStatus);\n    }\n\n    /**\n     * 模拟接收好友请求\n     */\n    public simulateReceiveFriendRequest(): void {\n        const names = ['小明', '小红', '小刚', '小李', '小张', '小王'];\n        const randomName = names[Math.floor(Math.random() * names.length)];\n        \n        // 创建模拟请求\n        const request = {\n            id: `FR${Date.now().toString().substr(-6)}`,\n            senderId: `user_${Date.now().toString().substr(-6)}`,\n            senderName: randomName,\n            message: `我是${randomName}，请求添加您为好友`,\n            timestamp: Date.now()\n        };\n        \n        // 触发事件\n        this.emit('friend-request-received', request);\n    }\n\n    /**\n     * 模拟好友数据\n     */\n    private getMockFriends(): any[] {\n        return [\n            {\n                id: 'user_123456',\n                name: '张三',\n                avatar: null,\n                isOnline: true,\n                status: 0, // 在线\n                level: 25,\n                addedAt: Date.now() - 1000 * 60 * 60 * 24 * 7 // 一周前\n            },\n            {\n                id: 'user_234567',\n                name: '李四',\n                avatar: null,\n                isOnline: true,\n                status: 1, // 游戏中\n                level: 18,\n                addedAt: Date.now() - 1000 * 60 * 60 * 24 * 14 // 两周前\n            },\n            {\n                id: 'user_345678',\n                name: '王五',\n                avatar: null,\n                isOnline: false,\n                status: 0,\n                level: 32,\n                addedAt: Date.now() - 1000 * 60 * 60 * 24 * 30 // 一个月前\n            },\n            {\n                id: 'user_456789',\n                name: '赵六',\n                avatar: null,\n                isOnline: true,\n                status: 2, // 匹配中\n                level: 10,\n                addedAt: Date.now() - 1000 * 60 * 60 * 24 * 2 // 两天前\n            },\n            {\n                id: 'user_567890',\n                name: '钱七',\n                avatar: null,\n                isOnline: false,\n                status: 0,\n                level: 5,\n                addedAt: Date.now() - 1000 * 60 * 60 * 24 * 60 // 两个月前\n            }\n        ];\n    }\n\n    /**\n     * 注册事件监听\n     */\n    public on(eventName: string, callback: Function, target?: any): void {\n        if (!this._listeners.has(eventName)) {\n            this._listeners.set(eventName, []);\n        }\n        \n        this._listeners.get(eventName)?.push({ callback, target });\n    }\n\n    /**\n     * 移除事件监听\n     */\n    public off(eventName: string, callback: Function, target?: any): void {\n        if (!this._listeners.has(eventName)) {\n            return;\n        }\n        \n        const listeners = this._listeners.get(eventName);\n        if (!listeners) return;\n        \n        for (let i = listeners.length - 1; i >= 0; i--) {\n            const listener = listeners[i];\n            if (listener.callback === callback && (!target || listener.target === target)) {\n                listeners.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * 触发事件\n     */\n    private emit(eventName: string, ...args: any[]): void {\n        if (!this._listeners.has(eventName)) {\n            return;\n        }\n        \n        const listeners = this._listeners.get(eventName);\n        if (!listeners) return;\n        \n        for (const listener of listeners) {\n            if (listener.target) {\n                listener.callback.apply(listener.target, args);\n            } else {\n                listener.callback(...args);\n            }\n        }\n    }\n}\n"]}