{"version":3,"sources":["file:///d:/editors/liars_dice_demo/node_modules/zod/lib/ZodError.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","ZodError","quotelessJson","ZodIssueCode","util_1","util","arrayToEnum","obj","json","JSON","stringify","replace","Error","errors","issues","constructor","addIssue","sub","addIssues","subs","actualProto","new","target","prototype","setPrototypeOf","__proto__","name","format","_mapper","mapper","issue","message","fieldErrors","_errors","processError","error","code","unionErrors","map","returnTypeError","argumentsError","path","length","push","curr","i","el","terminal","assert","toString","jsonStringifyReplacer","isEmpty","flatten","formErrors","create","_cjsExports","___esModule","__esModule","_ZodError","_quotelessJson","_ZodIssueCode"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './helpers/util';\nlet _cjsExports;\nlet ___esModule;\nlet _ZodError;\nlet _quotelessJson;\nlet _ZodIssueCode;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n exports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\n const util_1 = require(\"./helpers/util\");\n exports.ZodIssueCode = util_1.util.arrayToEnum([\n     \"invalid_type\",\n     \"invalid_literal\",\n     \"custom\",\n     \"invalid_union\",\n     \"invalid_union_discriminator\",\n     \"invalid_enum_value\",\n     \"unrecognized_keys\",\n     \"invalid_arguments\",\n     \"invalid_return_type\",\n     \"invalid_date\",\n     \"invalid_string\",\n     \"too_small\",\n     \"too_big\",\n     \"invalid_intersection_types\",\n     \"not_multiple_of\",\n     \"not_finite\",\n ]);\n const quotelessJson = (obj) => {\n     const json = JSON.stringify(obj, null, 2);\n     return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n };\n exports.quotelessJson = quotelessJson;\n class ZodError extends Error {\n     get errors() {\n         return this.issues;\n     }\n     constructor(issues) {\n         super();\n         this.issues = [];\n         this.addIssue = (sub) => {\n             this.issues = [...this.issues, sub];\n         };\n         this.addIssues = (subs = []) => {\n             this.issues = [...this.issues, ...subs];\n         };\n         const actualProto = new.target.prototype;\n         if (Object.setPrototypeOf) {\n             // eslint-disable-next-line ban/ban\n             Object.setPrototypeOf(this, actualProto);\n         }\n         else {\n             this.__proto__ = actualProto;\n         }\n         this.name = \"ZodError\";\n         this.issues = issues;\n     }\n     format(_mapper) {\n         const mapper = _mapper ||\n             function (issue) {\n                 return issue.message;\n             };\n         const fieldErrors = { _errors: [] };\n         const processError = (error) => {\n             for (const issue of error.issues) {\n                 if (issue.code === \"invalid_union\") {\n                     issue.unionErrors.map(processError);\n                 }\n                 else if (issue.code === \"invalid_return_type\") {\n                     processError(issue.returnTypeError);\n                 }\n                 else if (issue.code === \"invalid_arguments\") {\n                     processError(issue.argumentsError);\n                 }\n                 else if (issue.path.length === 0) {\n                     fieldErrors._errors.push(mapper(issue));\n                 }\n                 else {\n                     let curr = fieldErrors;\n                     let i = 0;\n                     while (i < issue.path.length) {\n                         const el = issue.path[i];\n                         const terminal = i === issue.path.length - 1;\n                         if (!terminal) {\n                             curr[el] = curr[el] || { _errors: [] };\n                             // if (typeof el === \"string\") {\n                             //   curr[el] = curr[el] || { _errors: [] };\n                             // } else if (typeof el === \"number\") {\n                             //   const errorArray: any = [];\n                             //   errorArray._errors = [];\n                             //   curr[el] = curr[el] || errorArray;\n                             // }\n                         }\n                         else {\n                             curr[el] = curr[el] || { _errors: [] };\n                             curr[el]._errors.push(mapper(issue));\n                         }\n                         curr = curr[el];\n                         i++;\n                     }\n                 }\n             }\n         };\n         processError(this);\n         return fieldErrors;\n     }\n     static assert(value) {\n         if (!(value instanceof ZodError)) {\n             throw new Error(`Not a ZodError: ${value}`);\n         }\n     }\n     toString() {\n         return this.message;\n     }\n     get message() {\n         return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n     }\n     get isEmpty() {\n         return this.issues.length === 0;\n     }\n     flatten(mapper = (issue) => issue.message) {\n         const fieldErrors = {};\n         const formErrors = [];\n         for (const sub of this.issues) {\n             if (sub.path.length > 0) {\n                 fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                 fieldErrors[sub.path[0]].push(mapper(sub));\n             }\n             else {\n                 formErrors.push(mapper(sub));\n             }\n         }\n         return { formErrors, fieldErrors };\n     }\n     get formErrors() {\n         return this.flatten();\n     }\n }\n exports.ZodError = ZodError;\n ZodError.create = (issues) => {\n     const error = new ZodError(issues);\n     return error;\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_ZodError = module.exports.ZodError;\n_quotelessJson = module.exports.quotelessJson;\n_ZodIssueCode = module.exports.ZodIssueCode;\n\n}, () => ({\n  './helpers/util': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}