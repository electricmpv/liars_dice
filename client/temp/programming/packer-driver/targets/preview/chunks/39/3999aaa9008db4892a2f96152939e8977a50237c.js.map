{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/prefabs/system-notice.ts"],"names":["_decorator","Component","Node","Label","Sprite","Color","tween","Vec3","UIOpacity","SpriteFrame","Button","ccclass","property","NoticeType","SystemNotice","INFO_COLOR","WARNING_COLOR","ERROR_COLOR","SUCCESS_COLOR","_hideTimeout","_originalPosition","_isVisible","_noticeId","_noticeData","onLoad","node","position","clone","active","confirmButton","on","onConfirmButtonClicked","onDestroy","clearTimeout","isValid","off","setNoticeId","id","getNoticeId","setNoticeData","data","getNoticeData","show","text","type","duration","isPersistent","confirmText","noticeId","noticeData","hideImmediately","persistent","content","string","icon","iconFrames","length","iconIndex","INFO","WARNING","ERROR","SUCCESS","spriteFrame","bgSprite","background","getComponent","color","confirmButtonLabel","persistentDecoration","playShowAnimation","hideTime","undefined","autoHideDuration","setTimeout","hide","emit","playHideAnimation","x","y","z","uiOpacity","addComponent","opacity","to","start","console","warn","call"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, Sprite, Color, tween, Vec3, UIOpacity, SpriteFrame, Button } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * 系统通知预制体\n * 功能：\n * 1. 显示系统通知内容和图标\n * 2. 支持不同类型通知显示（信息、警告、错误）\n * 3. 支持自动隐藏和动画效果\n * 4. 支持持久化通知（需要用户确认）\n */\n\n// 通知类型\nenum NoticeType {\n    INFO = 'info',\n    WARNING = 'warning',\n    ERROR = 'error',\n    SUCCESS = 'success'\n}\n\n@ccclass('SystemNotice')\nexport class SystemNotice extends Component {\n    @property(Label)\n    content: Label = null!;\n    \n    @property(Sprite)\n    icon: Sprite = null!;\n    \n    @property(Node)\n    background: Node = null!;\n\n    @property([SpriteFrame])\n    iconFrames: SpriteFrame[] = [];\n\n    @property\n    private autoHideDuration: number = 3; // 自动隐藏的时间（秒）\n\n    @property(Button)\n    confirmButton: Button = null!; // 确认按钮\n\n    @property(Label)\n    confirmButtonLabel: Label = null!; // 确认按钮文本\n\n    @property(Node)\n    persistentDecoration: Node = null!; // 持久化通知的装饰（边框等）\n\n    @property\n    persistent: boolean = false; // 是否为持久化通知（需要用户确认）\n\n    // 颜色常量\n    private readonly INFO_COLOR: Color = new Color(42, 130, 228, 255); // 蓝色\n    private readonly WARNING_COLOR: Color = new Color(245, 166, 35, 255); // 橙色\n    private readonly ERROR_COLOR: Color = new Color(231, 76, 60, 255); // 红色\n    private readonly SUCCESS_COLOR: Color = new Color(46, 204, 113, 255); // 绿色\n    \n    private _hideTimeout: any = null;\n    private _originalPosition: Vec3 = new Vec3();\n    private _isVisible: boolean = false;\n    private _noticeId: string = ''; // 通知唯一ID\n    private _noticeData: any = null; // 通知携带的数据\n\n    onLoad() {\n        // 初始隐藏\n        this._originalPosition = this.node.position.clone();\n        this.node.active = false;\n\n        // 注册确认按钮事件\n        if (this.confirmButton) {\n            this.confirmButton.node.on('click', this.onConfirmButtonClicked, this);\n        }\n    }\n\n    onDestroy() {\n        // 清除可能存在的定时器\n        if (this._hideTimeout) {\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n\n        // 移除事件监听，并检查节点有效性\n        if (this.confirmButton && this.confirmButton.isValid && this.confirmButton.node && this.confirmButton.node.isValid) {\n            this.confirmButton.node.off('click', this.onConfirmButtonClicked, this);\n        }\n    }\n\n    /**\n     * 设置通知ID\n     */\n    public setNoticeId(id: string): void {\n        this._noticeId = id;\n    }\n\n    /**\n     * 获取通知ID\n     */\n    public getNoticeId(): string {\n        return this._noticeId;\n    }\n\n    /**\n     * 设置通知数据\n     */\n    public setNoticeData(data: any): void {\n        this._noticeData = data;\n    }\n\n    /**\n     * 获取通知数据\n     */\n    public getNoticeData(): any {\n        return this._noticeData;\n    }\n\n    /**\n     * 显示系统通知\n     * @param text 通知内容\n     * @param type 通知类型\n     * @param duration 显示时长（秒），设为0则不自动隐藏\n     * @param isPersistent 是否为持久化通知（需要用户确认）\n     * @param confirmText 确认按钮文本\n     * @param noticeId 通知唯一ID\n     * @param noticeData 通知携带的数据\n     */\n    public show(\n        text: string, \n        type: 'info' | 'warning' | 'error' | 'success' = 'info', \n        duration?: number,\n        isPersistent: boolean = false,\n        confirmText: string = '确认',\n        noticeId: string = '',\n        noticeData: any = null\n    ): void {\n        // 如果已经在显示，先隐藏当前的\n        if (this._isVisible) {\n            this.hideImmediately();\n        }\n        \n        // 设置通知ID和数据\n        this._noticeId = noticeId;\n        this._noticeData = noticeData;\n\n        // 设置持久化状态\n        this.persistent = isPersistent;\n        \n        // 设置内容\n        if (this.content) {\n            this.content.string = text;\n        }\n        \n        // 设置图标\n        if (this.icon && this.iconFrames.length > 0) {\n            let iconIndex = 0;\n            switch (type) {\n                case NoticeType.INFO:\n                    iconIndex = 0;\n                    break;\n                case NoticeType.WARNING:\n                    iconIndex = 1;\n                    break;\n                case NoticeType.ERROR:\n                    iconIndex = 2;\n                    break;\n                case NoticeType.SUCCESS:\n                    iconIndex = 3;\n                    break;\n            }\n            \n            // 确保索引在有效范围内\n            if (iconIndex < this.iconFrames.length) {\n                this.icon.spriteFrame = this.iconFrames[iconIndex];\n            }\n        }\n        \n        // 设置背景颜色\n        const bgSprite = this.background?.getComponent(Sprite);\n        if (bgSprite) {\n            switch (type) {\n                case NoticeType.INFO:\n                    bgSprite.color = this.INFO_COLOR;\n                    break;\n                case NoticeType.WARNING:\n                    bgSprite.color = this.WARNING_COLOR;\n                    break;\n                case NoticeType.ERROR:\n                    bgSprite.color = this.ERROR_COLOR;\n                    break;\n                case NoticeType.SUCCESS:\n                    bgSprite.color = this.SUCCESS_COLOR;\n                    break;\n            }\n        }\n\n        // 配置确认按钮\n        if (this.confirmButton) {\n            this.confirmButton.node.active = this.persistent;\n            \n            if (this.confirmButtonLabel && this.persistent) {\n                this.confirmButtonLabel.string = confirmText;\n            }\n        }\n\n        // 设置持久化装饰\n        if (this.persistentDecoration) {\n            this.persistentDecoration.active = this.persistent;\n        }\n        \n        // 显示通知\n        this.node.active = true;\n        this._isVisible = true;\n        \n        // 播放显示动画\n        this.playShowAnimation();\n        \n        // 设置自动隐藏（仅非持久化通知）\n        if (!this.persistent) {\n            const hideTime = duration !== undefined ? duration : this.autoHideDuration;\n            if (hideTime > 0) {\n                // 清除可能存在的旧定时器\n                if (this._hideTimeout) {\n                    clearTimeout(this._hideTimeout);\n                }\n                \n                // 设置新的定时器\n                this._hideTimeout = setTimeout(() => {\n                    // 在定时器回调中检查节点是否仍然有效\n                    if (this.node && this.node.isValid) {\n                        this.hide();\n                    }\n                    this._hideTimeout = null; // 无论如何都清除 timeout 引用\n                }, hideTime * 1000);\n            }\n        }\n    }\n\n    /**\n     * 确认按钮点击处理\n     */\n    private onConfirmButtonClicked(): void {\n        // 发送确认事件\n        this.node.emit('notice-confirmed', {\n            noticeId: this._noticeId,\n            noticeData: this._noticeData\n        });\n        \n        // 隐藏通知\n        this.hide();\n    }\n\n    /**\n     * 隐藏通知（带动画）\n     */\n    public hide(): void {\n        if (!this._isVisible) return;\n        \n        this.playHideAnimation();\n    }\n\n    /**\n     * 立即隐藏通知（无动画）\n     */\n    public hideImmediately(): void {\n        if (!this._isVisible) return;\n        \n        this._isVisible = false;\n        this.node.active = false;\n        \n        // 重置位置\n        this.node.position = this._originalPosition.clone();\n        \n        // 清除可能存在的定时器\n        if (this._hideTimeout) {\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n    }\n\n    /**\n     * 播放显示动画\n     */\n    private playShowAnimation(): void {\n        // 重置位置和透明度\n        this.node.position = new Vec3(this._originalPosition.x, this._originalPosition.y - 50, this._originalPosition.z);\n        const uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\n        uiOpacity.opacity = 0;\n        \n        // 从下方滑入并淡入\n        tween(this.node)\n            .to(0.3, { position: this._originalPosition })\n            .start();\n            \n        tween(uiOpacity)\n            .to(0.3, { opacity: 255 })\n            .start();\n    }\n\n    /**\n     * 播放隐藏动画\n     */\n    private playHideAnimation(): void {\n        // 在动画开始前检查节点有效性\n        if (!this.node || !this.node.isValid) {\n            console.warn('[SystemNotice] playHideAnimation called on an invalid node.');\n            return;\n        }\n\n        const uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\n        \n        // 向上滑出并淡出\n        tween(this.node) // 此时 node 保证有效\n            .to(0.3, { position: new Vec3(this._originalPosition.x, this._originalPosition.y + 50, this._originalPosition.z) })\n            .start();\n            \n        tween(uiOpacity)\n            .to(0.3, { opacity: 0 })\n            .call(() => {\n                this._isVisible = false;\n                this.node.active = false;\n                this.node.position = this._originalPosition.clone();\n            })\n            .start();\n    }\n}\n"]}