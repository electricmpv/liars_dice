{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/prefabs/friend-request.ts"],"names":["_decorator","Component","Node","Button","Label","tween","Vec3","UIOpacity","PlayerItem","ccclass","property","RequestType","FriendRequest","_requestId","_senderId","_requestTime","_expirationTime","_requestType","FRIEND_REQUEST","_roomId","_countdownTimer","_originalPosition","_isVisible","onLoad","node","position","clone","active","start","acceptButton","on","onAcceptButtonClicked","rejectButton","onRejectButtonClicked","onDestroy","off","clearCountdownTimer","show","requestInfo","hideImmediately","requestId","senderId","Date","now","expirationTime","requestType","roomId","playerInfo","setPlayerId","setPlayerName","senderName","requestMessage","message","string","ROOM_INVITE","TEAM_INVITE","GAME_INVITE","requestTypeLabel","updateRequestTypeIcon","startCountdown","playShowAnimation","friendRequestIcon","roomInviteIcon","teamInviteIcon","gameInviteIcon","hide","playHideAnimation","updateTimerDisplay","setInterval","elapsedTime","Math","floor","remainingTime","onRequestExpired","clearInterval","timerLabel","undefined","max","minutes","seconds","toString","padStart","playButtonClickAnimation","emit","buttonNode","originalScale","scale","to","x","y","z","uiOpacity","getComponent","addComponent","opacity","call"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Button, Label, tween, Vec3, UIOpacity } from 'cc';\nimport { PlayerItem } from './player-item';\nconst { ccclass, property } = _decorator;\n\n/**\n * 好友请求预制体\n * 功能：\n * 1. 显示发送请求的玩家信息\n * 2. 提供接受和拒绝按钮\n * 3. 支持请求动画显示和消失\n * 4. 区分不同类型的请求来源\n */\n\n// 请求类型枚举\nenum RequestType {\n    FRIEND_REQUEST = 'friend',     // 好友申请\n    ROOM_INVITE = 'room',          // 房间邀请\n    TEAM_INVITE = 'team',          // 组队邀请\n    GAME_INVITE = 'game'           // 游戏邀请\n}\n\n@ccclass('FriendRequest')\nexport class FriendRequest extends Component {\n    @property(PlayerItem)\n    playerInfo: PlayerItem = null!;\n    \n    @property(Button)\n    acceptButton: Button = null!;\n    \n    @property(Button)\n    rejectButton: Button = null!;\n\n    @property(Label)\n    requestMessage: Label = null!;\n\n    @property(Label)\n    timerLabel: Label = null!;\n\n    @property(Label)\n    requestTypeLabel: Label = null!;  // 显示请求类型的标签\n\n    @property(Node)\n    friendRequestIcon: Node = null!;  // 好友请求图标\n\n    @property(Node)\n    roomInviteIcon: Node = null!;     // 房间邀请图标\n\n    @property(Node)\n    teamInviteIcon: Node = null!;     // 组队邀请图标\n\n    @property(Node)\n    gameInviteIcon: Node = null!;     // 游戏邀请图标\n\n    private _requestId: string = '';\n    private _senderId: string = '';\n    private _requestTime: number = 0;\n    private _expirationTime: number = 300; // 请求过期时间（秒）\n    private _requestType: RequestType = RequestType.FRIEND_REQUEST; // 请求类型\n    private _roomId: string = ''; // 房间ID（针对房间邀请）\n    private _countdownTimer: any = null;\n    private _originalPosition: Vec3 = new Vec3();\n    private _isVisible: boolean = false;\n\n    onLoad() {\n        this._originalPosition = this.node.position.clone();\n        this.node.active = false;\n    }\n\n    start() {\n        // 注册按钮点击事件\n        if (this.acceptButton) {\n            this.acceptButton.node.on('click', this.onAcceptButtonClicked, this);\n        }\n        \n        if (this.rejectButton) {\n            this.rejectButton.node.on('click', this.onRejectButtonClicked, this);\n        }\n    }\n\n    onDestroy() {\n        // 移除事件监听\n        if (this.acceptButton) {\n            this.acceptButton.node.off('click', this.onAcceptButtonClicked, this);\n        }\n        \n        if (this.rejectButton) {\n            this.rejectButton.node.off('click', this.onRejectButtonClicked, this);\n        }\n        \n        // 清除定时器\n        this.clearCountdownTimer();\n    }\n\n    /**\n     * 显示好友请求\n     * @param requestInfo 请求信息\n     */\n    public show(requestInfo: {\n        requestId: string;\n        senderId: string;\n        senderName: string;\n        message?: string;\n        expirationTime?: number;\n        requestType?: RequestType | string;\n        roomId?: string;\n        teamId?: string;\n        gameId?: string;\n    }): void {\n        if (this._isVisible) {\n            this.hideImmediately();\n        }\n        \n        // 保存请求信息\n        this._requestId = requestInfo.requestId;\n        this._senderId = requestInfo.senderId;\n        this._requestTime = Date.now();\n        \n        if (requestInfo.expirationTime) {\n            this._expirationTime = requestInfo.expirationTime;\n        }\n        \n        // 设置请求类型\n        if (requestInfo.requestType) {\n            this._requestType = requestInfo.requestType as RequestType;\n        } else {\n            this._requestType = RequestType.FRIEND_REQUEST;\n        }\n        \n        // 保存额外信息\n        if (requestInfo.roomId) {\n            this._roomId = requestInfo.roomId;\n        }\n        \n        // 设置玩家信息\n        if (this.playerInfo) {\n            this.playerInfo.setPlayerId(requestInfo.senderId);\n            this.playerInfo.setPlayerName(requestInfo.senderName);\n        }\n        \n        // 设置请求消息\n        if (this.requestMessage) {\n            if (requestInfo.message) {\n                this.requestMessage.string = requestInfo.message;\n            } else {\n                // 根据请求类型生成默认消息\n                switch (this._requestType) {\n                    case RequestType.FRIEND_REQUEST:\n                        this.requestMessage.string = `${requestInfo.senderName} 请求添加您为好友`;\n                        break;\n                    case RequestType.ROOM_INVITE:\n                        this.requestMessage.string = `${requestInfo.senderName} 邀请您加入房间 ${this._roomId}`;\n                        break;\n                    case RequestType.TEAM_INVITE:\n                        this.requestMessage.string = `${requestInfo.senderName} 邀请您加入队伍`;\n                        break;\n                    case RequestType.GAME_INVITE:\n                        this.requestMessage.string = `${requestInfo.senderName} 邀请您一起游戏`;\n                        break;\n                }\n            }\n        }\n        \n        // 设置请求类型标签\n        if (this.requestTypeLabel) {\n            switch (this._requestType) {\n                case RequestType.FRIEND_REQUEST:\n                    this.requestTypeLabel.string = \"好友申请\";\n                    break;\n                case RequestType.ROOM_INVITE:\n                    this.requestTypeLabel.string = \"房间邀请\";\n                    break;\n                case RequestType.TEAM_INVITE:\n                    this.requestTypeLabel.string = \"组队邀请\";\n                    break;\n                case RequestType.GAME_INVITE:\n                    this.requestTypeLabel.string = \"游戏邀请\";\n                    break;\n            }\n        }\n        \n        // 更新图标显示\n        this.updateRequestTypeIcon();\n        \n        // 显示请求窗口\n        this.node.active = true;\n        this._isVisible = true;\n        \n        // 开始倒计时\n        this.startCountdown();\n        \n        // 播放显示动画\n        this.playShowAnimation();\n    }\n\n    /**\n     * 更新请求类型图标\n     */\n    private updateRequestTypeIcon(): void {\n        // 隐藏所有图标\n        if (this.friendRequestIcon) this.friendRequestIcon.active = false;\n        if (this.roomInviteIcon) this.roomInviteIcon.active = false;\n        if (this.teamInviteIcon) this.teamInviteIcon.active = false;\n        if (this.gameInviteIcon) this.gameInviteIcon.active = false;\n        \n        // 根据请求类型显示对应图标\n        switch (this._requestType) {\n            case RequestType.FRIEND_REQUEST:\n                if (this.friendRequestIcon) this.friendRequestIcon.active = true;\n                break;\n            case RequestType.ROOM_INVITE:\n                if (this.roomInviteIcon) this.roomInviteIcon.active = true;\n                break;\n            case RequestType.TEAM_INVITE:\n                if (this.teamInviteIcon) this.teamInviteIcon.active = true;\n                break;\n            case RequestType.GAME_INVITE:\n                if (this.gameInviteIcon) this.gameInviteIcon.active = true;\n                break;\n        }\n    }\n\n    /**\n     * 隐藏请求（带动画）\n     */\n    public hide(): void {\n        if (!this._isVisible) return;\n        \n        this.playHideAnimation();\n    }\n\n    /**\n     * 立即隐藏请求（无动画）\n     */\n    public hideImmediately(): void {\n        if (!this._isVisible) return;\n        \n        this._isVisible = false;\n        this.node.active = false;\n        \n        // 重置位置\n        this.node.position = this._originalPosition.clone();\n        \n        // 清除倒计时\n        this.clearCountdownTimer();\n    }\n\n    /**\n     * 开始倒计时\n     */\n    private startCountdown(): void {\n        // 清除可能存在的旧定时器\n        this.clearCountdownTimer();\n        \n        // 更新倒计时显示\n        this.updateTimerDisplay();\n        \n        // 设置新的倒计时\n        this._countdownTimer = setInterval(() => {\n            const elapsedTime = Math.floor((Date.now() - this._requestTime) / 1000);\n            const remainingTime = this._expirationTime - elapsedTime;\n            \n            if (remainingTime <= 0) {\n                // 请求过期，自动拒绝\n                this.clearCountdownTimer();\n                this.onRequestExpired();\n            } else {\n                // 更新倒计时显示\n                this.updateTimerDisplay(remainingTime);\n            }\n        }, 1000);\n    }\n\n    /**\n     * 清除倒计时定时器\n     */\n    private clearCountdownTimer(): void {\n        if (this._countdownTimer) {\n            clearInterval(this._countdownTimer);\n            this._countdownTimer = null;\n        }\n    }\n\n    /**\n     * 更新倒计时显示\n     */\n    private updateTimerDisplay(remainingTime?: number): void {\n        if (!this.timerLabel) return;\n        \n        if (remainingTime === undefined) {\n            const elapsedTime = Math.floor((Date.now() - this._requestTime) / 1000);\n            remainingTime = this._expirationTime - elapsedTime;\n        }\n        \n        // 确保不为负数\n        remainingTime = Math.max(0, remainingTime);\n        \n        // 格式化为分:秒\n        const minutes = Math.floor(remainingTime / 60);\n        const seconds = remainingTime % 60;\n        this.timerLabel.string = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }\n\n    /**\n     * 接受按钮点击处理\n     */\n    private onAcceptButtonClicked(): void {\n        // 播放点击动画\n        this.playButtonClickAnimation(this.acceptButton.node);\n        \n        // 触发接受事件\n        this.node.emit('request-accepted', {\n            requestId: this._requestId,\n            senderId: this._senderId,\n            requestType: this._requestType,\n            roomId: this._roomId\n        });\n        \n        // 隐藏请求\n        this.hide();\n    }\n\n    /**\n     * 拒绝按钮点击处理\n     */\n    private onRejectButtonClicked(): void {\n        // 播放点击动画\n        this.playButtonClickAnimation(this.rejectButton.node);\n        \n        // 触发拒绝事件\n        this.node.emit('request-rejected', {\n            requestId: this._requestId,\n            senderId: this._senderId,\n            requestType: this._requestType,\n            roomId: this._roomId\n        });\n        \n        // 隐藏请求\n        this.hide();\n    }\n\n    /**\n     * 请求过期处理\n     */\n    private onRequestExpired(): void {\n        // 触发过期事件\n        this.node.emit('request-expired', {\n            requestId: this._requestId,\n            senderId: this._senderId,\n            requestType: this._requestType,\n            roomId: this._roomId\n        });\n        \n        // 隐藏请求\n        this.hide();\n    }\n\n    /**\n     * 播放按钮点击动画\n     */\n    private playButtonClickAnimation(buttonNode: Node): void {\n        const originalScale = buttonNode.scale.clone();\n        \n        tween(buttonNode)\n            .to(0.1, { scale: new Vec3(originalScale.x * 0.9, originalScale.y * 0.9, 1) })\n            .to(0.1, { scale: originalScale })\n            .start();\n    }\n\n    /**\n     * 播放显示动画\n     */\n    private playShowAnimation(): void {\n        // 设置初始位置（从顶部滑入）\n        this.node.position = new Vec3(this._originalPosition.x, this._originalPosition.y + 100, this._originalPosition.z);\n        const uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\n        uiOpacity.opacity = 0;\n        \n        // 播放动画\n        tween(this.node)\n            .to(0.3, { position: this._originalPosition })\n            .start();\n            \n        tween(uiOpacity)\n            .to(0.3, { opacity: 255 })\n            .start();\n    }\n\n    /**\n     * 播放隐藏动画\n     */\n    private playHideAnimation(): void {\n        const uiOpacity = this.node.getComponent(UIOpacity) || this.node.addComponent(UIOpacity);\n        \n        // 向右滑出并淡出\n        tween(this.node)\n            .to(0.3, { position: new Vec3(this._originalPosition.x + 100, this._originalPosition.y, this._originalPosition.z) })\n            .start();\n            \n        tween(uiOpacity)\n            .to(0.3, { opacity: 0 })\n            .call(() => {\n                this._isVisible = false;\n                this.node.active = false;\n                this.node.position = this._originalPosition.clone();\n            })\n            .start();\n    }\n}\n"]}