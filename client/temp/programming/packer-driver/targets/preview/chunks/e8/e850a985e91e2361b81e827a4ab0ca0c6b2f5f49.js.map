{"version":3,"sources":["file:///D:/editors/liars_dice_demo/client/assets/scripts/core/app-initializer.ts"],"names":["_decorator","Component","director","game","loadColyseusClient","NetworkManager","ccclass","property","AppInitializer","start","_initialized","console","log","window","Colyseus","Client","error","Error","getInstance","registerGameEvents","handleInitializationError","on","scheduleOnce","loadScene","getScene","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,I,OAAAA,I;;AACjCC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,c,iBAAAA,c;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;;gCAEaQ,c,WADZF,OAAO,CAAC,gBAAD,C,2BAAR,MACaE,cADb,SACoCP,SADpC,CAC8C;AAIpCQ,QAAAA,KAAK,GAAG;AAAA;;AAAA;AACV;AACA,gBAAID,cAAc,CAACE,YAAnB,EAAiC;AAC7BC,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AACH;;AAEDD,YAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAEA,gBAAI;AACA;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AACA,kBAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0C,CAACD,MAAM,CAACC,QAAP,CAAgBC,MAA/D,EAAuE;AACnEJ,gBAAAA,OAAO,CAACK,KAAR,CAAc,qCAAd;AACAL,gBAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACA,sBAAM;AAAA;AAAA,+DAAN,CAHmE,CAKnE;;AACA,oBAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0C,CAACD,MAAM,CAACC,QAAP,CAAgBC,MAA/D,EAAuE;AACnE,wBAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACH;AACJ,eATD,MASO;AACHN,gBAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH,eAdD,CAgBA;;;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAjBA,CAkBA;;AACA;AAAA;AAAA,oDAAeM,WAAf,GAnBA,CAqBA;;AACAV,cAAAA,cAAc,CAACE,YAAf,GAA8B,IAA9B;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAvBA,CAyBA;;AACA,cAAA,KAAI,CAACO,kBAAL;AAEH,aA5BD,CA4BE,OAAOH,KAAP,EAAc;AACZL,cAAAA,OAAO,CAACK,KAAR,CAAc,2BAAd,EAA2CA,KAA3C,EADY,CAEZ;;AACA,cAAA,KAAI,CAACI,yBAAL,CAA+BJ,KAA/B;AACH;AAzCS;AA0Cb;;AAEOG,QAAAA,kBAAkB,GAAG;AACzB;AACAhB,UAAAA,IAAI,CAACkB,EAAL,CAAQ,MAAR,EAAgB,MAAM;AAClBV,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADkB,CAElB;AACH,WAHD;AAKAT,UAAAA,IAAI,CAACkB,EAAL,CAAQ,MAAR,EAAgB,MAAM;AAClBV,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADkB,CAElB;AACH,WAHD;AAIH;;AAEOQ,QAAAA,yBAAyB,CAACJ,KAAD,EAAa;AAC1CL,UAAAA,OAAO,CAACK,KAAR,CAAc,yBAAd,EAAyCA,KAAzC,EAD0C,CAE1C;AACA;;AACA,eAAKM,YAAL,CAAkB,MAAM;AACpBpB,YAAAA,QAAQ,CAACqB,SAAT,CAAmBrB,QAAQ,CAACsB,QAAT,GAAqBC,IAAxC;AACH,WAFD,EAEG,CAFH;AAGH;;AApEyC,O,UAE3Bf,Y,GAAwB,K","sourcesContent":["import { _decorator, Component, director, game } from 'cc';\nimport { loadColyseusClient } from '../libs/colyseus-loader';\nimport { NetworkManager } from './network';\n\nconst { ccclass, property } = _decorator;\n\n/**\n * 应用初始化器\n * 负责在应用启动时执行必要的初始化操作\n * 此组件应添加到LoginScene的Canvas节点上\n */\n@ccclass('AppInitializer')\nexport class AppInitializer extends Component {\n    \n    private static _initialized: boolean = false;\n    \n    async start() {\n        // 避免重复初始化\n        if (AppInitializer._initialized) {\n            console.log('[AppInitializer] 应用已初始化，跳过');\n            return;\n        }\n        \n        console.log('[AppInitializer] 开始初始化应用...');\n        \n        try {\n            // 检查Colyseus是否已加载（作为插件脚本）\n            console.log('[AppInitializer] 检查Colyseus客户端库...');\n            if (typeof window.Colyseus === 'undefined' || !window.Colyseus.Client) {\n                console.error('[AppInitializer] Colyseus客户端库未加载或无效');\n                console.log('[AppInitializer] 尝试通过loadColyseusClient加载...');\n                await loadColyseusClient();\n                \n                // 再次检查\n                if (typeof window.Colyseus === 'undefined' || !window.Colyseus.Client) {\n                    throw new Error('Colyseus客户端库加载失败，请确保在Cocos Creator中正确配置插件脚本');\n                }\n            } else {\n                console.log('[AppInitializer] Colyseus客户端库已加载');\n            }\n            \n            // 预初始化网络管理器（不连接，只创建实例）\n            console.log('[AppInitializer] 预初始化网络管理器...');\n            // 只需要获取实例，不需要显式初始化\n            NetworkManager.getInstance();\n            \n            // 标记为已初始化\n            AppInitializer._initialized = true;\n            console.log('[AppInitializer] 应用初始化完成');\n            \n            // 注册游戏事件监听器\n            this.registerGameEvents();\n            \n        } catch (error) {\n            console.error('[AppInitializer] 应用初始化失败:', error);\n            // 显示错误信息或重试\n            this.handleInitializationError(error);\n        }\n    }\n    \n    private registerGameEvents() {\n        // 监听游戏隐藏/显示事件\n        game.on('hide', () => {\n            console.log('[AppInitializer] 游戏进入后台');\n            // 可以在这里暂停游戏或执行其他操作\n        });\n        \n        game.on('show', () => {\n            console.log('[AppInitializer] 游戏回到前台');\n            // 可以在这里恢复游戏或执行其他操作\n        });\n    }\n    \n    private handleInitializationError(error: any) {\n        console.error('[AppInitializer] 初始化错误:', error);\n        // 这里可以显示错误对话框或重试初始化\n        // 简单起见，我们延迟3秒后重新加载当前场景\n        this.scheduleOnce(() => {\n            director.loadScene(director.getScene()!.name);\n        }, 3);\n    }\n}\n"]}